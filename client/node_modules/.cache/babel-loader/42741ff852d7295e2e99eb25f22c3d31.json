{"ast":null,"code":"import React, { useRef } from 'react'; // vector add\n\nfunction addV(v1, v2) {\n  return v1.map(function (v, i) {\n    return v + v2[i];\n  });\n} // vector substract\n\n\nfunction subV(v1, v2) {\n  return v1.map(function (v, i) {\n    return v - v2[i];\n  });\n}\n/**\r\n * Calculates distance\r\n * @param movement the difference between current and initial vectors\r\n * @returns distance\r\n */\n\n\nfunction calculateDistance(movement) {\n  return Math.hypot.apply(Math, movement);\n}\n\nfunction calculateAllGeometry(movement, delta) {\n  if (delta === void 0) {\n    delta = movement;\n  }\n\n  var dl = calculateDistance(delta);\n  var alpha = dl === 0 ? 0 : 1 / dl;\n  var direction = delta.map(function (v) {\n    return alpha * v;\n  });\n  var distance = calculateDistance(movement);\n  return {\n    distance: distance,\n    direction: direction\n  };\n}\n/**\r\n * Calculates all kinematics\r\n * @template T the expected vector type\r\n * @param movement the difference between current and initial vectors\r\n * @param delta the difference between current and previous vectors\r\n * @param delta_t the time difference between current and previous timestamps\r\n * @returns all kinematics\r\n */\n\n\nfunction calculateAllKinematics(movement, delta, dt) {\n  var dl = calculateDistance(delta);\n  var alpha = dl === 0 ? 0 : 1 / dl;\n  var beta = dt === 0 ? 0 : 1 / dt;\n  var velocity = beta * dl;\n  var velocities = delta.map(function (v) {\n    return beta * v;\n  });\n  var direction = delta.map(function (v) {\n    return alpha * v;\n  });\n  var distance = calculateDistance(movement);\n  return {\n    velocities: velocities,\n    velocity: velocity,\n    distance: distance,\n    direction: direction\n  };\n}\n/**\r\n * Because IE doesn't support `Math.sign` function, so we use the polyfill version of the function.\r\n * This polyfill function is suggested by Mozilla:\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign#Polyfill\r\n * @param x target number\r\n */\n\n\nfunction sign(x) {\n  if (Math.sign) return Math.sign(x);\n  return Number(x > 0) - Number(x < 0) || +x;\n}\n\nfunction minMax(value, min, max) {\n  return Math.max(min, Math.min(value, max));\n} // Based on @aholachek ;)\n// https://twitter.com/chpwn/status/285540192096497664\n// iOS constant = 0.55\n// https://medium.com/@nathangitter/building-fluid-interfaces-ios-swift-9732bb934bf5\n\n\nfunction rubberband2(distance, constant) {\n  // default constant from the article is 0.7\n  return Math.pow(distance, constant * 5);\n}\n\nfunction rubberband(distance, dimension, constant) {\n  if (dimension === 0 || Math.abs(dimension) === Infinity) return rubberband2(distance, constant);\n  return distance * dimension * constant / (dimension + constant * distance);\n}\n\nfunction rubberbandIfOutOfBounds(position, min, max, constant) {\n  if (constant === void 0) {\n    constant = 0.15;\n  }\n\n  if (constant === 0) return minMax(position, min, max);\n  if (position < min) return -rubberband(min - position, max - min, constant) + min;\n  if (position > max) return +rubberband(position - max, max - min, constant) + max;\n  return position;\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction noop() {}\n/**\r\n * TODO Beware that only optimized cases are covered in tests =)\r\n * TODO Need to cover general case as well\r\n *\r\n * @param fns\r\n */\n\n\nfunction chainFns() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  if (fns.length === 0) return noop;\n  if (fns.length === 1) return fns[0];\n  return function () {\n    var result;\n\n    for (var _iterator = _createForOfIteratorHelperLoose(fns), _step; !(_step = _iterator()).done;) {\n      var fn = _step.value;\n      result = fn.apply(this, arguments) || result;\n    }\n\n    return result;\n  };\n}\n/**\r\n * Expects a simple value or 2D vector (an array with 2 elements) and\r\n * always returns 2D vector. If simple value is passed, returns a\r\n * vector with this value as both coordinates.\r\n *\r\n * @param value\r\n */\n\n\nfunction ensureVector(value, fallback) {\n  if (value === undefined) {\n    if (fallback === undefined) {\n      throw new Error('Must define fallback value if undefined is expected');\n    }\n\n    value = fallback;\n  }\n\n  if (Array.isArray(value)) return value;\n  return [value, value];\n}\n/**\r\n * Helper for defining a default value\r\n *\r\n * @param value\r\n * @param fallback\r\n */\n\n\nfunction assignDefault(value, fallback) {\n  return Object.assign({}, fallback, value || {});\n}\n/**\r\n * Resolves getters (functions) by calling them\r\n * If simple value is given it just passes through\r\n *\r\n * @param v\r\n */\n\n\nfunction valueFn(v) {\n  if (typeof v === 'function') {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    } // @ts-ignore\n\n\n    return v.apply(void 0, args);\n  } else {\n    return v;\n  }\n}\n\nfunction resolveWith(config, resolvers) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var result = {};\n\n  for (var _i = 0, _Object$entries = Object.entries(resolvers); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _Object$entries[_i],\n        key = _Object$entries$_i[0],\n        resolver = _Object$entries$_i[1];\n\n    switch (typeof resolver) {\n      case 'function':\n        result[key] = resolver.call(result, config[key], key, config);\n        break;\n\n      case 'object':\n        result[key] = resolveWith(config[key], resolver);\n        break;\n\n      case 'boolean':\n        if (resolver) result[key] = config[key];\n        break;\n    }\n  }\n\n  return result;\n}\n\nvar DEFAULT_DRAG_DELAY = 180;\nvar DEFAULT_RUBBERBAND = 0.15;\nvar DEFAULT_SWIPE_VELOCITY = 0.5;\nvar DEFAULT_SWIPE_DISTANCE = 60;\nvar InternalGestureOptionsNormalizers = {\n  threshold: function threshold(value) {\n    if (value === void 0) {\n      value = 0;\n    }\n\n    return ensureVector(value);\n  },\n  rubberband: function rubberband(value) {\n    if (value === void 0) {\n      value = 0;\n    }\n\n    switch (value) {\n      case true:\n        return ensureVector(DEFAULT_RUBBERBAND);\n\n      case false:\n        return ensureVector(0);\n\n      default:\n        return ensureVector(value);\n    }\n  },\n  enabled: function enabled(value) {\n    if (value === void 0) {\n      value = true;\n    }\n\n    return value;\n  },\n  triggerAllEvents: function triggerAllEvents(value) {\n    if (value === void 0) {\n      value = false;\n    }\n\n    return value;\n  },\n  initial: function initial(value) {\n    if (value === void 0) {\n      value = 0;\n    }\n\n    if (typeof value === 'function') return value;\n    return ensureVector(value);\n  }\n};\n\nvar InternalCoordinatesOptionsNormalizers = /*#__PURE__*/_extends({}, InternalGestureOptionsNormalizers, {\n  axis: true,\n  lockDirection: function lockDirection(value) {\n    if (value === void 0) {\n      value = false;\n    }\n\n    return value;\n  },\n  bounds: function bounds(value) {\n    if (value === void 0) {\n      value = {};\n    }\n\n    if (typeof value === 'function') return function (state) {\n      return InternalCoordinatesOptionsNormalizers.bounds(value(state));\n    };\n    var _value2 = value,\n        _value2$left = _value2.left,\n        left = _value2$left === void 0 ? -Infinity : _value2$left,\n        _value2$right = _value2.right,\n        right = _value2$right === void 0 ? Infinity : _value2$right,\n        _value2$top = _value2.top,\n        top = _value2$top === void 0 ? -Infinity : _value2$top,\n        _value2$bottom = _value2.bottom,\n        bottom = _value2$bottom === void 0 ? Infinity : _value2$bottom;\n    return [[left, right], [top, bottom]];\n  }\n});\n\nvar isBrowser = typeof window !== 'undefined' && window.document && window.document.createElement;\nvar InternalGenericOptionsNormalizers = {\n  enabled: function enabled(value) {\n    if (value === void 0) {\n      value = true;\n    }\n\n    return value;\n  },\n  domTarget: true,\n  window: /*#__PURE__*/function (_window) {\n    function window(_x) {\n      return _window.apply(this, arguments);\n    }\n\n    window.toString = function () {\n      return _window.toString();\n    };\n\n    return window;\n  }(function (value) {\n    if (value === void 0) {\n      value = isBrowser ? window : undefined;\n    }\n\n    return value;\n  }),\n  eventOptions: function eventOptions(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$passive = _ref.passive,\n        passive = _ref$passive === void 0 ? true : _ref$passive,\n        _ref$capture = _ref.capture,\n        capture = _ref$capture === void 0 ? false : _ref$capture;\n\n    return {\n      passive: passive,\n      capture: capture\n    };\n  }\n};\n\nvar InternalDistanceAngleOptionsNormalizers = /*#__PURE__*/_extends({}, InternalGestureOptionsNormalizers, {\n  bounds: function bounds(_value, _key, _ref2) {\n    var _ref2$distanceBounds = _ref2.distanceBounds,\n        distanceBounds = _ref2$distanceBounds === void 0 ? {} : _ref2$distanceBounds,\n        _ref2$angleBounds = _ref2.angleBounds,\n        angleBounds = _ref2$angleBounds === void 0 ? {} : _ref2$angleBounds;\n\n    var _distanceBounds = function _distanceBounds(state) {\n      var D = assignDefault(valueFn(distanceBounds, state), {\n        min: -Infinity,\n        max: Infinity\n      });\n      return [D.min, D.max];\n    };\n\n    var _angleBounds = function _angleBounds(state) {\n      var A = assignDefault(valueFn(angleBounds, state), {\n        min: -Infinity,\n        max: Infinity\n      });\n      return [A.min, A.max];\n    };\n\n    if (typeof distanceBounds !== 'function' && typeof angleBounds !== 'function') return [_distanceBounds(), _angleBounds()];\n    return function (state) {\n      return [_distanceBounds(state), _angleBounds(state)];\n    };\n  }\n});\n\nvar InternalDragOptionsNormalizers = /*#__PURE__*/_extends({}, InternalCoordinatesOptionsNormalizers, {\n  threshold: function threshold(v, _k, _ref3) {\n    var _ref3$filterTaps = _ref3.filterTaps,\n        filterTaps = _ref3$filterTaps === void 0 ? false : _ref3$filterTaps,\n        _ref3$lockDirection = _ref3.lockDirection,\n        lockDirection = _ref3$lockDirection === void 0 ? false : _ref3$lockDirection,\n        _ref3$axis = _ref3.axis,\n        axis = _ref3$axis === void 0 ? undefined : _ref3$axis;\n    var A = ensureVector(v, filterTaps ? 3 : lockDirection ? 1 : axis ? 1 : 0);\n    this.filterTaps = filterTaps || A[0] + A[1] > 0;\n    return A;\n  },\n  swipeVelocity: function swipeVelocity(v) {\n    if (v === void 0) {\n      v = DEFAULT_SWIPE_VELOCITY;\n    }\n\n    return ensureVector(v);\n  },\n  swipeDistance: function swipeDistance(v) {\n    if (v === void 0) {\n      v = DEFAULT_SWIPE_DISTANCE;\n    }\n\n    return ensureVector(v);\n  },\n  delay: function delay(value) {\n    if (value === void 0) {\n      value = 0;\n    }\n\n    switch (value) {\n      case true:\n        return DEFAULT_DRAG_DELAY;\n\n      case false:\n        return 0;\n\n      default:\n        return value;\n    }\n  }\n});\n\nfunction getInternalGenericOptions(config) {\n  if (config === void 0) {\n    config = {};\n  } // TODO warn when passive is set to true and domTarget is undefined\n\n\n  return resolveWith(config, InternalGenericOptionsNormalizers);\n}\n\nfunction getInternalCoordinatesOptions(config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  return resolveWith(config, InternalCoordinatesOptionsNormalizers);\n}\n\nfunction getInternalDistanceAngleOptions(config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  return resolveWith(config, InternalDistanceAngleOptionsNormalizers);\n}\n\nfunction getInternalDragOptions(config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  return resolveWith(config, InternalDragOptionsNormalizers);\n}\n\nfunction _buildMoveConfig(_ref) {\n  var domTarget = _ref.domTarget,\n      eventOptions = _ref.eventOptions,\n      window = _ref.window,\n      enabled = _ref.enabled,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"domTarget\", \"eventOptions\", \"window\", \"enabled\"]);\n\n  var opts = getInternalGenericOptions({\n    domTarget: domTarget,\n    eventOptions: eventOptions,\n    window: window,\n    enabled: enabled\n  });\n  opts.move = getInternalCoordinatesOptions(rest);\n  return opts;\n}\n\nfunction _buildHoverConfig(_ref2) {\n  var domTarget = _ref2.domTarget,\n      eventOptions = _ref2.eventOptions,\n      window = _ref2.window,\n      enabled = _ref2.enabled,\n      rest = _objectWithoutPropertiesLoose(_ref2, [\"domTarget\", \"eventOptions\", \"window\", \"enabled\"]);\n\n  var opts = getInternalGenericOptions({\n    domTarget: domTarget,\n    eventOptions: eventOptions,\n    window: window,\n    enabled: enabled\n  });\n  opts.hover = _extends({\n    enabled: true\n  }, rest);\n  return opts;\n}\n\nfunction _buildDragConfig(_ref3) {\n  var domTarget = _ref3.domTarget,\n      eventOptions = _ref3.eventOptions,\n      window = _ref3.window,\n      enabled = _ref3.enabled,\n      rest = _objectWithoutPropertiesLoose(_ref3, [\"domTarget\", \"eventOptions\", \"window\", \"enabled\"]);\n\n  var opts = getInternalGenericOptions({\n    domTarget: domTarget,\n    eventOptions: eventOptions,\n    window: window,\n    enabled: enabled\n  });\n  opts.drag = getInternalDragOptions(rest);\n  return opts;\n}\n\nfunction _buildPinchConfig(_ref4) {\n  var domTarget = _ref4.domTarget,\n      eventOptions = _ref4.eventOptions,\n      window = _ref4.window,\n      enabled = _ref4.enabled,\n      rest = _objectWithoutPropertiesLoose(_ref4, [\"domTarget\", \"eventOptions\", \"window\", \"enabled\"]);\n\n  var opts = getInternalGenericOptions({\n    domTarget: domTarget,\n    eventOptions: eventOptions,\n    window: window,\n    enabled: enabled\n  });\n  opts.pinch = getInternalDistanceAngleOptions(rest);\n  return opts;\n}\n\nfunction _buildScrollConfig(_ref5) {\n  var domTarget = _ref5.domTarget,\n      eventOptions = _ref5.eventOptions,\n      window = _ref5.window,\n      enabled = _ref5.enabled,\n      rest = _objectWithoutPropertiesLoose(_ref5, [\"domTarget\", \"eventOptions\", \"window\", \"enabled\"]);\n\n  var opts = getInternalGenericOptions({\n    domTarget: domTarget,\n    eventOptions: eventOptions,\n    window: window,\n    enabled: enabled\n  });\n  opts.scroll = getInternalCoordinatesOptions(rest);\n  return opts;\n}\n\nfunction _buildWheelConfig(_ref6) {\n  var domTarget = _ref6.domTarget,\n      eventOptions = _ref6.eventOptions,\n      window = _ref6.window,\n      enabled = _ref6.enabled,\n      rest = _objectWithoutPropertiesLoose(_ref6, [\"domTarget\", \"eventOptions\", \"window\", \"enabled\"]);\n\n  var opts = getInternalGenericOptions({\n    domTarget: domTarget,\n    eventOptions: eventOptions,\n    window: window,\n    enabled: enabled\n  });\n  opts.wheel = getInternalCoordinatesOptions(rest);\n  return opts;\n}\n\nfunction buildComplexConfig(config, actions) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  if (actions === void 0) {\n    actions = new Set();\n  }\n\n  var _config = config,\n      drag = _config.drag,\n      wheel = _config.wheel,\n      move = _config.move,\n      scroll = _config.scroll,\n      pinch = _config.pinch,\n      hover = _config.hover,\n      eventOptions = _config.eventOptions,\n      window = _config.window,\n      domTarget = _config.domTarget,\n      enabled = _config.enabled;\n  var mergedConfig = getInternalGenericOptions({\n    eventOptions: eventOptions,\n    window: window,\n    domTarget: domTarget,\n    enabled: enabled\n  });\n  if (actions.has('onDrag')) mergedConfig.drag = getInternalDragOptions(drag);\n  if (actions.has('onWheel')) mergedConfig.wheel = getInternalCoordinatesOptions(wheel);\n  if (actions.has('onScroll')) mergedConfig.scroll = getInternalCoordinatesOptions(scroll);\n  if (actions.has('onMove')) mergedConfig.move = getInternalCoordinatesOptions(move);\n  if (actions.has('onPinch')) mergedConfig.pinch = getInternalDistanceAngleOptions(pinch);\n  if (actions.has('onHover')) mergedConfig.hover = _extends({\n    enabled: true\n  }, hover);\n  return mergedConfig;\n}\n\nfunction getInitial(mixed) {\n  return _extends({\n    _active: false,\n    _blocked: false,\n    _intentional: [false, false],\n    _movement: [0, 0],\n    _initial: [0, 0],\n    _bounds: [[-Infinity, Infinity], [-Infinity, Infinity]],\n    _lastEventType: undefined,\n    event: undefined,\n    // currentTarget: undefined,\n    // pointerId: undefined,\n    intentional: false,\n    values: [0, 0],\n    velocities: [0, 0],\n    delta: [0, 0],\n    movement: [0, 0],\n    offset: [0, 0],\n    lastOffset: [0, 0],\n    direction: [0, 0],\n    initial: [0, 0],\n    previous: [0, 0],\n    first: false,\n    last: false,\n    active: false,\n    timeStamp: 0,\n    startTime: 0,\n    elapsedTime: 0,\n    cancel: noop,\n    canceled: false,\n    memo: undefined,\n    args: undefined\n  }, mixed);\n}\n\nfunction getInitialState() {\n  var shared = {\n    hovering: false,\n    scrolling: false,\n    wheeling: false,\n    dragging: false,\n    moving: false,\n    pinching: false,\n    touches: 0,\n    buttons: 0,\n    down: false,\n    shiftKey: false,\n    altKey: false,\n    metaKey: false,\n    ctrlKey: false\n  };\n  var drag = getInitial({\n    axis: undefined,\n    xy: [0, 0],\n    vxvy: [0, 0],\n    velocity: 0,\n    distance: 0,\n    _isTap: true,\n    _delayedEvent: false,\n    _pointerId: undefined,\n    tap: false,\n    swipe: [0, 0]\n  });\n  var pinch = getInitial({\n    da: [0, 0],\n    vdva: [0, 0],\n    // @ts-ignore origin can never be passed as undefined in userland\n    origin: undefined,\n    turns: 0\n  });\n  var wheel = getInitial({\n    axis: undefined,\n    xy: [0, 0],\n    vxvy: [0, 0],\n    velocity: 0,\n    distance: 0\n  });\n  var move = getInitial({\n    axis: undefined,\n    xy: [0, 0],\n    vxvy: [0, 0],\n    velocity: 0,\n    distance: 0\n  });\n  var scroll = getInitial({\n    axis: undefined,\n    xy: [0, 0],\n    vxvy: [0, 0],\n    velocity: 0,\n    distance: 0\n  });\n  return {\n    shared: shared,\n    drag: drag,\n    pinch: pinch,\n    wheel: wheel,\n    move: move,\n    scroll: scroll\n  };\n}\n\nvar RecognizersMap = /*#__PURE__*/new Map();\n/**\r\n * @private\r\n * Recognizer abstract class.\r\n */\n\nvar Recognizer = /*#__PURE__*/function () {\n  /**\r\n   * Creates an instance of a gesture recognizer.\r\n   * @param stateKey drag, move, pinch, etc.\r\n   * @param controller the controller attached to the gesture\r\n   * @param [args] the args that should be passed to the gesture handler\r\n   */\n  function Recognizer(controller, args) {\n    var _this = this;\n\n    if (args === void 0) {\n      args = [];\n    }\n\n    this.controller = controller;\n    this.args = args;\n    this.debounced = true; // Convenience method to set a timeout for a given gesture\n\n    this.setTimeout = function (callback, ms) {\n      var _window;\n\n      if (ms === void 0) {\n        ms = 140;\n      }\n\n      clearTimeout(_this.controller.timeouts[_this.stateKey]);\n\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n\n      _this.controller.timeouts[_this.stateKey] = (_window = window).setTimeout.apply(_window, [callback, ms].concat(args));\n    }; // Convenience method to clear a timeout for a given gesture\n\n\n    this.clearTimeout = function () {\n      clearTimeout(_this.controller.timeouts[_this.stateKey]);\n    };\n    /**\r\n     * Fires the gesture handler\r\n     */\n\n\n    this.fireGestureHandler = function (forceFlag) {\n      if (forceFlag === void 0) {\n        forceFlag = false;\n      }\n      /**\r\n       * If the gesture has been blocked (this can happen when the gesture has started in an unwanted direction),\r\n       * clean everything and don't do anything.\r\n       */\n\n\n      if (_this.state._blocked) {\n        // we need debounced gestures to end by themselves\n        if (!_this.debounced) {\n          _this.state._active = false;\n\n          _this.clean();\n        }\n\n        return null;\n      } // If the gesture has no intentional dimension, don't fire the handler.\n\n\n      if (!forceFlag && !_this.state.intentional && !_this.config.triggerAllEvents) return null;\n\n      if (_this.state.intentional) {\n        var prev_active = _this.state.active;\n        var next_active = _this.state._active;\n        _this.state.active = next_active;\n        _this.state.first = next_active && !prev_active;\n        _this.state.last = prev_active && !next_active;\n        _this.controller.state.shared[_this.ingKey] = next_active; // Sets dragging, pinching, etc. to the gesture active state\n      }\n\n      var state = _extends({}, _this.controller.state.shared, _this.state, _this.mapStateValues(_this.state)); // @ts-ignore\n\n\n      var newMemo = _this.handler(state); // Sets memo to the returned value of the handler (unless it's not undefined)\n\n\n      _this.state.memo = newMemo !== void 0 ? newMemo : _this.state.memo; // Cleans the gesture when the gesture is no longer active.\n\n      if (!_this.state._active) _this.clean();\n      return state;\n    };\n  } // Returns the gesture config\n\n\n  var _proto = Recognizer.prototype; // Convenience method to update the shared state\n\n  _proto.updateSharedState = function updateSharedState(sharedState) {\n    Object.assign(this.controller.state.shared, sharedState);\n  } // Convenience method to update the gesture state\n  ;\n\n  _proto.updateGestureState = function updateGestureState(gestureState) {\n    Object.assign(this.state, gestureState);\n  }\n  /**\r\n   * Returns state properties depending on the movement and state.\r\n   *\r\n   * Should be overriden for custom behavior, doesn't do anything in the implementation\r\n   * below.\r\n   */\n  ;\n\n  _proto.checkIntentionality = function checkIntentionality(_intentional, _movement) {\n    return {\n      _intentional: _intentional,\n      _blocked: false\n    };\n  }\n  /**\r\n   * Returns basic movement properties for the gesture based on the next values and current state.\r\n   */\n  ;\n\n  _proto.getMovement = function getMovement(values) {\n    var _this$config = this.config,\n        initial = _this$config.initial,\n        bounds = _this$config.bounds,\n        rubberband = _this$config.rubberband,\n        T = _this$config.threshold;\n    var _this$state = this.state,\n        _bounds = _this$state._bounds,\n        _initial = _this$state._initial,\n        _active = _this$state._active,\n        wasIntentional = _this$state._intentional,\n        lastOffset = _this$state.lastOffset,\n        prevMovement = _this$state.movement;\n    var M = this.getInternalMovement(values, this.state);\n    var i0 = wasIntentional[0] === false ? getIntentionalDisplacement(M[0], T[0]) : wasIntentional[0];\n    var i1 = wasIntentional[1] === false ? getIntentionalDisplacement(M[1], T[1]) : wasIntentional[1]; // Get gesture specific state properties based on intentionality and movement.\n\n    var intentionalityCheck = this.checkIntentionality([i0, i1], M);\n\n    if (intentionalityCheck._blocked) {\n      return _extends({}, intentionalityCheck, {\n        _movement: M,\n        delta: [0, 0]\n      });\n    }\n\n    var _intentional = intentionalityCheck._intentional;\n    var _movement = M;\n\n    var __cachedBounds;\n\n    var __cachedInitial;\n\n    if (_intentional[0] !== false && wasIntentional[0] === false) {\n      __cachedInitial = valueFn(initial, this.state);\n      __cachedBounds = valueFn(bounds, this.state);\n      _initial[0] = __cachedInitial[0];\n      _bounds[0] = __cachedBounds[0];\n    }\n\n    if (_intentional[1] !== false && wasIntentional[1] === false) {\n      var _cachedInitial, _cachedBounds;\n\n      __cachedInitial = (_cachedInitial = __cachedInitial) != null ? _cachedInitial : valueFn(initial, this.state);\n      __cachedBounds = (_cachedBounds = __cachedBounds) != null ? _cachedBounds : valueFn(bounds, this.state);\n      _initial[1] = __cachedInitial[1];\n      _bounds[1] = __cachedBounds[1];\n    }\n    /**\r\n     * The movement sent to the handler has 0 in its dimensions when intentionality is false.\r\n     * It is calculated from the actual movement minus the threshold.\r\n     */\n\n\n    var movement = [_intentional[0] !== false ? M[0] - _intentional[0] : _initial[0], _intentional[1] !== false ? M[1] - _intentional[1] : _initial[1]];\n    var offset = addV(movement, lastOffset);\n    /**\r\n     * Rubberband should be 0 when the gesture is no longer active, so that movement\r\n     * and offset can return within their bounds.\r\n     */\n\n    var _rubberband = _active ? rubberband : [0, 0];\n\n    movement = computeRubberband(_bounds, addV(movement, _initial), _rubberband);\n    return _extends({}, intentionalityCheck, {\n      intentional: _intentional[0] !== false || _intentional[1] !== false,\n      _initial: _initial,\n      _movement: _movement,\n      movement: movement,\n      values: values,\n      offset: computeRubberband(_bounds, offset, _rubberband),\n      delta: subV(movement, prevMovement)\n    });\n  } // Cleans the gesture. Can be overriden by gestures.\n  ;\n\n  _proto.clean = function clean() {\n    this.clearTimeout();\n  };\n\n  _createClass(Recognizer, [{\n    key: \"config\",\n    get: function get() {\n      return this.controller.config[this.stateKey];\n    } // Is the gesture enabled\n\n  }, {\n    key: \"enabled\",\n    get: function get() {\n      return this.controller.config.enabled && this.config.enabled;\n    } // Returns the controller state for a given gesture\n\n  }, {\n    key: \"state\",\n    get: function get() {\n      return this.controller.state[this.stateKey];\n    } // Returns the gesture handler\n\n  }, {\n    key: \"handler\",\n    get: function get() {\n      return this.controller.handlers[this.stateKey];\n    }\n  }]);\n\n  return Recognizer;\n}(); //--------------------------------------------\n\n\nfunction getIntentionalDisplacement(movement, threshold) {\n  if (Math.abs(movement) >= threshold) {\n    return sign(movement) * threshold;\n  } else {\n    return false;\n  }\n}\n\nfunction computeRubberband(bounds, _ref, _ref2) {\n  var Vx = _ref[0],\n      Vy = _ref[1];\n  var Rx = _ref2[0],\n      Ry = _ref2[1];\n  var _bounds$ = bounds[0],\n      X1 = _bounds$[0],\n      X2 = _bounds$[1],\n      _bounds$2 = bounds[1],\n      Y1 = _bounds$2[0],\n      Y2 = _bounds$2[1];\n  return [rubberbandIfOutOfBounds(Vx, X1, X2, Rx), rubberbandIfOutOfBounds(Vy, Y1, Y2, Ry)];\n}\n/**\r\n * Returns a generic, common payload for all gestures from an event.\r\n */\n\n\nfunction getGenericPayload(_ref3, event, isStartEvent) {\n  var state = _ref3.state,\n      args = _ref3.args;\n  var timeStamp = event.timeStamp,\n      _lastEventType = event.type;\n  var previous = state.values;\n  var elapsedTime = isStartEvent ? 0 : timeStamp - state.startTime;\n  return {\n    _lastEventType: _lastEventType,\n    event: event,\n    timeStamp: timeStamp,\n    elapsedTime: elapsedTime,\n    args: args,\n    previous: previous\n  };\n}\n/**\r\n * Returns the reinitialized start state for the gesture.\r\n * Should be common to all gestures.\r\n */\n\n\nfunction getStartGestureState(recognizer, values, event) {\n  var offset = recognizer.state.offset;\n  var startTime = event.timeStamp;\n  return _extends({}, getInitialState()[recognizer.stateKey], {\n    _active: true,\n    values: values,\n    initial: values,\n    offset: offset,\n    lastOffset: offset,\n    startTime: startTime\n  });\n}\n\nfunction partial(func, state) {\n  return function (event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    } // @ts-ignore\n\n\n    return func.call.apply(func, [this, _extends({}, state, {\n      event: event\n    })].concat(args));\n  };\n}\n/**\r\n * The controller will keep track of the state for all gestures and also keep\r\n * track of timeouts, and window listeners.\r\n */\n\n\nvar Controller = function Controller(classes) {\n  var _this = this;\n\n  this.classes = classes;\n\n  this.bind = function () {\n    var bindings = {};\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    for (var _iterator = _createForOfIteratorHelperLoose(_this.classes), _step; !(_step = _iterator()).done;) {\n      var RecognizerClass = _step.value;\n      new RecognizerClass(_this, args).addBindings(bindings);\n    } // we also add event bindings for native handlers\n\n\n    for (var _i = 0, _Object$entries = Object.entries(_this.nativeRefs); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _Object$entries[_i],\n          event = _Object$entries$_i[0],\n          handler = _Object$entries$_i[1];\n      addBindings(bindings, event, partial(handler, _extends({}, _this.state.shared, {\n        args: args\n      })));\n    }\n\n    if (_this.config.domTarget) {\n      // If config.domTarget is set we add event listeners to it and return the clean function.\n      return updateDomListeners(_this, bindings);\n    } else {\n      // If not, we return an object that contains gesture handlers mapped to react handler event keys.\n      return getPropsListener(_this, bindings);\n    }\n  };\n\n  this.effect = function () {\n    if (_this.config.domTarget) _this.bind();\n    return _this.clean;\n  };\n  /**\r\n   * Function ran on component unmount: cleans timeouts and removes dom listeners set by the bind function.\r\n   */\n\n\n  this.clean = function () {\n    var domTarget = getDomTargetFromConfig(_this.config);\n    var eventOptions = _this.config.eventOptions;\n    if (domTarget) removeListeners(domTarget, takeAll(_this.domListeners), eventOptions);\n    Object.values(_this.timeouts).forEach(clearTimeout);\n    clearAllWindowListeners(_this);\n  };\n\n  this.state = getInitialState();\n  this.timeouts = {};\n  this.domListeners = [];\n  this.windowListeners = {};\n};\n\nfunction clearAllWindowListeners(controller) {\n  var _controller$config = controller.config,\n      el = _controller$config.window,\n      eventOptions = _controller$config.eventOptions,\n      windowListeners = controller.windowListeners;\n  if (!el) return;\n\n  for (var stateKey in windowListeners) {\n    var handlers = windowListeners[stateKey];\n    removeListeners(el, handlers, eventOptions);\n  }\n\n  controller.windowListeners = {};\n}\n\nfunction clearWindowListeners(_ref, stateKey) {\n  var config = _ref.config,\n      windowListeners = _ref.windowListeners;\n  if (!config.window) return;\n  removeListeners(config.window, windowListeners[stateKey], config.eventOptions);\n  delete windowListeners[stateKey];\n}\n\nfunction updateWindowListeners(_ref2, stateKey, listeners) {\n  var config = _ref2.config,\n      windowListeners = _ref2.windowListeners;\n\n  if (listeners === void 0) {\n    listeners = [];\n  }\n\n  if (!config.window) return;\n  removeListeners(config.window, windowListeners[stateKey], config.eventOptions);\n  addListeners(config.window, windowListeners[stateKey] = listeners, config.eventOptions);\n}\n\nfunction updateDomListeners(_ref3, bindings) {\n  var config = _ref3.config,\n      domListeners = _ref3.domListeners;\n  var domTarget = getDomTargetFromConfig(config);\n  if (!domTarget) throw new Error('domTarget must be defined');\n  var eventOptions = config.eventOptions;\n  removeListeners(domTarget, takeAll(domListeners), eventOptions);\n\n  for (var _i2 = 0, _Object$entries2 = Object.entries(bindings); _i2 < _Object$entries2.length; _i2++) {\n    var _Object$entries2$_i = _Object$entries2[_i2],\n        key = _Object$entries2$_i[0],\n        fns = _Object$entries2$_i[1];\n    var name = key.slice(2).toLowerCase();\n    domListeners.push([name, chainFns.apply(void 0, fns)]);\n  }\n\n  addListeners(domTarget, domListeners, eventOptions);\n}\n\nfunction getPropsListener(_ref4, bindings) {\n  var config = _ref4.config;\n  var props = {};\n  var captureString = config.eventOptions.capture ? 'Capture' : '';\n\n  for (var _i3 = 0, _Object$entries3 = Object.entries(bindings); _i3 < _Object$entries3.length; _i3++) {\n    var _Object$entries3$_i = _Object$entries3[_i3],\n        event = _Object$entries3$_i[0],\n        fns = _Object$entries3$_i[1];\n    var fnsArray = Array.isArray(fns) ? fns : [fns];\n    var key = event + captureString;\n    props[key] = chainFns.apply(void 0, fnsArray);\n  }\n\n  return props;\n}\n\nfunction takeAll(array) {\n  if (array === void 0) {\n    array = [];\n  }\n\n  return array.splice(0, array.length);\n}\n\nfunction getDomTargetFromConfig(_ref5) {\n  var domTarget = _ref5.domTarget;\n  return domTarget && 'current' in domTarget ? domTarget.current : domTarget;\n}\n/**\r\n * bindings is an object which keys match ReactEventHandlerKeys.\r\n * Since a recognizer might want to bind a handler function to an event key already used by a previously\r\n * added recognizer, we need to make sure that each event key is an array of all the functions mapped for\r\n * that key.\r\n */\n\n\nfunction addBindings(bindings, name, fn) {\n  if (!bindings[name]) bindings[name] = [];\n  bindings[name].push(fn);\n}\n\nfunction addListeners(el, listeners, options) {\n  if (listeners === void 0) {\n    listeners = [];\n  }\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  for (var _iterator2 = _createForOfIteratorHelperLoose(listeners), _step2; !(_step2 = _iterator2()).done;) {\n    var _step2$value = _step2.value,\n        eventName = _step2$value[0],\n        eventHandler = _step2$value[1];\n    el.addEventListener(eventName, eventHandler, options);\n  }\n}\n\nfunction removeListeners(el, listeners, options) {\n  if (listeners === void 0) {\n    listeners = [];\n  }\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  for (var _iterator3 = _createForOfIteratorHelperLoose(listeners), _step3; !(_step3 = _iterator3()).done;) {\n    var _step3$value = _step3.value,\n        eventName = _step3$value[0],\n        eventHandler = _step3$value[1];\n    el.removeEventListener(eventName, eventHandler, options);\n  }\n}\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/**\r\n * Utility hook called by all gesture hooks and that will be responsible for the internals.\r\n *\r\n * @param handlers\r\n * @param classes\r\n * @param config\r\n * @param nativeHandlers - native handlers such as onClick, onMouseDown, etc.\r\n */\n\n\nfunction useRecognizers(handlers, config, nativeHandlers) {\n  if (nativeHandlers === void 0) {\n    nativeHandlers = {};\n  }\n\n  var classes = resolveClasses(handlers);\n  var controller = React.useMemo(function () {\n    return new Controller(classes);\n  }, []);\n  controller.config = config;\n  controller.handlers = handlers;\n  controller.nativeRefs = nativeHandlers;\n  React.useEffect(controller.effect, []); // @ts-ignore\n\n  if (controller.config.domTarget) return deprecationNoticeForDomTarget; // @ts-ignore\n\n  return controller.bind;\n}\n\nfunction deprecationNoticeForDomTarget() {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(\"Deprecation notice: When the `domTarget` option is specified, you don't need to write `useEffect(bind, [bind])` anymore: event binding is now made handled internally to this lib.\\n\\nNext version won't return anything when `domTarget` is provided, therefore your code will break if you try to call `useEffect`.\");\n  }\n}\n\nfunction resolveClasses(internalHandlers) {\n  var classes = new Set();\n  if (internalHandlers.drag) classes.add(RecognizersMap.get('drag'));\n  if (internalHandlers.wheel) classes.add(RecognizersMap.get('wheel'));\n  if (internalHandlers.scroll) classes.add(RecognizersMap.get('scroll'));\n  if (internalHandlers.move) classes.add(RecognizersMap.get('move'));\n  if (internalHandlers.pinch) classes.add(RecognizersMap.get('pinch'));\n  if (internalHandlers.hover) classes.add(RecognizersMap.get('hover'));\n  return classes;\n}\n/**\r\n * @private\r\n * Abstract class for coordinates-based gesture recongizers\r\n */\n\n\nvar CoordinatesRecognizer = /*#__PURE__*/function (_Recognizer) {\n  _inheritsLoose(CoordinatesRecognizer, _Recognizer);\n\n  function CoordinatesRecognizer() {\n    return _Recognizer.apply(this, arguments) || this;\n  }\n\n  var _proto = CoordinatesRecognizer.prototype;\n  /**\r\n   * Returns the real movement (without taking intentionality into acount)\r\n   */\n\n  _proto.getInternalMovement = function getInternalMovement(values, state) {\n    return subV(values, state.initial);\n  }\n  /**\r\n   * In coordinates-based gesture, this function will detect the first intentional axis,\r\n   * lock the gesture axis if lockDirection is specified in the config, block the gesture\r\n   * if the first intentional axis doesn't match the specified axis in config.\r\n   */\n  ;\n\n  _proto.checkIntentionality = function checkIntentionality(_intentional, _movement) {\n    if (_intentional[0] === false && _intentional[1] === false) {\n      return {\n        _intentional: _intentional,\n        axis: this.state.axis\n      };\n    }\n\n    var _movement$map = _movement.map(Math.abs),\n        absX = _movement$map[0],\n        absY = _movement$map[1];\n\n    var axis = this.state.axis || (absX > absY ? 'x' : absX < absY ? 'y' : undefined);\n    if (!this.config.axis && !this.config.lockDirection) return {\n      _intentional: _intentional,\n      _blocked: false,\n      axis: axis\n    };\n    if (!axis) return {\n      _intentional: [false, false],\n      _blocked: false,\n      axis: axis\n    };\n    if (!!this.config.axis && axis !== this.config.axis) return {\n      _intentional: _intentional,\n      _blocked: true,\n      axis: axis\n    };\n    _intentional[axis === 'x' ? 1 : 0] = false;\n    return {\n      _intentional: _intentional,\n      _blocked: false,\n      axis: axis\n    };\n  };\n\n  _proto.getKinematics = function getKinematics(values, event) {\n    var state = this.getMovement(values);\n\n    if (!state._blocked) {\n      var dt = event.timeStamp - this.state.timeStamp;\n      Object.assign(state, calculateAllKinematics(state.movement, state.delta, dt));\n    }\n\n    return state;\n  };\n\n  _proto.mapStateValues = function mapStateValues(state) {\n    return {\n      xy: state.values,\n      vxvy: state.velocities\n    };\n  };\n\n  return CoordinatesRecognizer;\n}(Recognizer);\n\nvar WEBKIT_DISTANCE_SCALE_FACTOR = 260;\n/**\r\n * Whether the browser supports GestureEvent (ie Safari)\r\n * @returns true if the browser supports gesture event\r\n */\n\nfunction supportsGestureEvents() {\n  try {\n    // TODO [TS] possibly find GestureEvent definitions?\n    // @ts-ignore: no type definitions for webkit GestureEvents\n    return 'constructor' in GestureEvent;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction supportsTouchEvents() {\n  return typeof window !== 'undefined' && window.ontouchstart === null;\n}\n\nfunction getTouchEvents(event) {\n  if ('touches' in event) {\n    var targetTouches = event.targetTouches,\n        changedTouches = event.changedTouches;\n    return targetTouches.length > 0 ? targetTouches : changedTouches;\n  }\n\n  return null;\n}\n\nfunction getGenericEventData(event) {\n  var buttons = 'buttons' in event ? event.buttons : 0;\n  var touchEvents = getTouchEvents(event);\n  var touches = touchEvents && touchEvents.length || 0;\n  var down = touches > 0 || buttons > 0;\n  var shiftKey = event.shiftKey,\n      altKey = event.altKey,\n      metaKey = event.metaKey,\n      ctrlKey = event.ctrlKey; // TODO check if this might create some overrides?\n\n  return {\n    touches: touches,\n    down: down,\n    buttons: buttons,\n    shiftKey: shiftKey,\n    altKey: altKey,\n    metaKey: metaKey,\n    ctrlKey: ctrlKey\n  };\n}\n/**\r\n * Gets pointer event values.\r\n * @param event\r\n * @returns pointer event values\r\n */\n\n\nfunction getPointerEventValues(event) {\n  var touchEvents = getTouchEvents(event);\n\n  var _ref = touchEvents ? touchEvents[0] : event,\n      clientX = _ref.clientX,\n      clientY = _ref.clientY;\n\n  return [clientX, clientY];\n}\n/**\r\n * Gets scroll event values\r\n * @param event\r\n * @returns scroll event values\r\n */\n\n\nfunction getScrollEventValues(event) {\n  // If the currentTarget is the window then we return the scrollX/Y position.\n  // If not (ie the currentTarget is a DOM element), then we return scrollLeft/Top\n  var _event$currentTarget = event.currentTarget,\n      scrollX = _event$currentTarget.scrollX,\n      scrollY = _event$currentTarget.scrollY,\n      scrollLeft = _event$currentTarget.scrollLeft,\n      scrollTop = _event$currentTarget.scrollTop;\n  return [scrollX || scrollLeft || 0, scrollY || scrollTop || 0];\n}\n/**\r\n * Gets wheel event values.\r\n * @param event\r\n * @returns wheel event values\r\n */\n\n\nfunction getWheelEventValues(event) {\n  var deltaX = event.deltaX,\n      deltaY = event.deltaY; //TODO implement polyfill ?\n  // https://developer.mozilla.org/en-US/docs/Web/Events/wheel#Polyfill\n\n  return [deltaX, deltaY];\n}\n/**\r\n * Gets webkit gesture event values.\r\n * @param event\r\n * @returns webkit gesture event values\r\n */\n\n\nfunction getWebkitGestureEventValues(event) {\n  return [event.scale * WEBKIT_DISTANCE_SCALE_FACTOR, event.rotation];\n}\n/**\r\n * Gets two touches event data\r\n * @param event\r\n * @returns two touches event data\r\n */\n\n\nfunction getTwoTouchesEventData(event) {\n  var _e$rotation;\n\n  var targetTouches = event.targetTouches;\n  var A = targetTouches[0],\n      B = targetTouches[1];\n  var dx = B.clientX - A.clientX;\n  var dy = B.clientY - A.clientY;\n  var cx = (B.clientX + A.clientX) / 2;\n  var cy = (B.clientY + A.clientY) / 2;\n  var e = 'nativeEvent' in event ? event.nativeEvent : event;\n  var distance = Math.hypot(dx, dy);\n  var angle = (_e$rotation = e.rotation) != null ? _e$rotation : -(Math.atan2(dx, dy) * 180) / Math.PI;\n  var values = [distance, angle];\n  var origin = [cx, cy];\n  return {\n    values: values,\n    origin: origin\n  };\n}\n\nvar TAP_DISTANCE_THRESHOLD = 3;\nvar SWIPE_MAX_ELAPSED_TIME = 220;\n\nvar DragRecognizer = /*#__PURE__*/function (_CoordinatesRecognize) {\n  _inheritsLoose(DragRecognizer, _CoordinatesRecognize);\n\n  function DragRecognizer() {\n    var _this;\n\n    _this = _CoordinatesRecognize.apply(this, arguments) || this;\n    _this.ingKey = 'dragging';\n    _this.stateKey = 'drag';\n    /**\r\n     * TODO add back when setPointerCapture is widely wupported\r\n     * https://caniuse.com/#search=setPointerCapture\r\n     * private setPointers = (event: UseGestureEvent<PointerEvent>) => {\r\n     *   const { currentTarget, pointerId } = event\r\n     *   if (currentTarget) currentTarget.setPointerCapture(pointerId)\r\n     *   this.updateGestureState({ currentTarget, pointerId })\r\n     * }\r\n            * private removePointers = () => {\r\n     *   const { currentTarget, pointerId } = this.state\r\n     *   if (currentTarget && pointerId) currentTarget.releasePointerCapture(pointerId)\r\n     * }\r\n     */\n\n    _this.onDragStart = function (event) {\n      if (!_this.enabled || _this.state._active) return;\n      /**\r\n       * TODO add back when setPointerCapture is widely supported\r\n       * this.setPointers(event as PointerEvent)\r\n       */\n\n      updateWindowListeners(_this.controller, _this.stateKey, [['pointermove', _this.onDragChange], ['pointerup', _this.onDragEnd], ['pointercancel', _this.onDragEnd]]); // We set the state pointerId to the event.pointerId so we can make sure\n      // that we lock the drag to the event initiating the gesture\n\n      _this.updateGestureState({\n        _pointerId: event.pointerId\n      });\n\n      if (_this.config.delay > 0) {\n        _this.state._delayedEvent = true; // If it's a React SyntheticEvent we need to persist it so that we can use it async\n\n        if ('persist' in event && typeof event.persist === 'function') event.persist();\n\n        _this.setTimeout(_this.startDrag.bind(_assertThisInitialized(_this)), _this.config.delay, event);\n      } else {\n        _this.startDrag(event);\n      }\n    };\n\n    _this.onDragChange = function (event) {\n      // If the gesture was canceled don't respond to the event.\n      if (_this.state.canceled) return; // If the event pointerId doesn't match the initiating pointerId\n      // don't respond to the event.\n\n      if (event.pointerId !== _this.state._pointerId) return; // If the gesture isn't active then respond to the event only if\n      // it's been delayed via the `delay` option, in which case start\n      // the gesture immediately.\n\n      if (!_this.state._active) {\n        if (_this.state._delayedEvent) {\n          _this.clearTimeout();\n\n          _this.startDrag(event);\n        }\n\n        return;\n      }\n\n      var genericEventData = getGenericEventData(event); // If the event doesn't have any button / touches left we should cancel\n      // the gesture. This may happen if the drag release happens outside the browser\n      // window.\n\n      if (!genericEventData.down) {\n        _this.onDragEnd(event);\n\n        return;\n      }\n\n      _this.updateSharedState(genericEventData);\n\n      var values = getPointerEventValues(event);\n\n      var kinematics = _this.getKinematics(values, event);\n\n      var genericPayload = getGenericPayload(_assertThisInitialized(_this), event); // This verifies if the drag can be assimilated to a tap by checking\n      // if the real distance of the drag (ie not accounting for the threshold) is\n      // greater than the TAP_DISTANCE_THRESHOLD.\n\n      var _isTap = _this.state._isTap;\n      var realDistance = calculateDistance(kinematics._movement);\n      if (_isTap && realDistance >= TAP_DISTANCE_THRESHOLD) _isTap = false;\n\n      _this.updateGestureState(_extends({}, genericPayload, kinematics, {\n        _isTap: _isTap\n      }));\n\n      _this.fireGestureHandler();\n    };\n\n    _this.onDragEnd = function (event) {\n      // If the event pointerId doesn't match the initiating pointerId\n      // don't respond to the event.\n      if (event.pointerId !== _this.state._pointerId) return;\n      _this.state._active = false;\n\n      _this.updateSharedState({\n        down: false,\n        buttons: 0,\n        touches: 0\n      });\n\n      var tap = _this.state._isTap;\n      var _this$state$velocitie = _this.state.velocities,\n          vx = _this$state$velocitie[0],\n          vy = _this$state$velocitie[1];\n      var _this$state$movement = _this.state.movement,\n          mx = _this$state$movement[0],\n          my = _this$state$movement[1];\n      var _this$state$_intentio = _this.state._intentional,\n          ix = _this$state$_intentio[0],\n          iy = _this$state$_intentio[1];\n      var _this$config$swipeVel = _this.config.swipeVelocity,\n          svx = _this$config$swipeVel[0],\n          svy = _this$config$swipeVel[1];\n      var _this$config$swipeDis = _this.config.swipeDistance,\n          sx = _this$config$swipeDis[0],\n          sy = _this$config$swipeDis[1];\n\n      var endState = _extends({}, getGenericPayload(_assertThisInitialized(_this), event), _this.getMovement(_this.state.values));\n\n      var swipe = [0, 0];\n\n      if (endState.elapsedTime < SWIPE_MAX_ELAPSED_TIME) {\n        if (ix !== false && Math.abs(vx) > svx && Math.abs(mx) > sx) swipe[0] = sign(vx);\n        if (iy !== false && Math.abs(vy) > svy && Math.abs(my) > sy) swipe[1] = sign(vy);\n      }\n\n      _this.updateGestureState(_extends({}, endState, {\n        tap: tap,\n        swipe: swipe\n      }));\n\n      _this.fireGestureHandler(tap === true);\n    };\n\n    _this.clean = function () {\n      _CoordinatesRecognize.prototype.clean.call(_assertThisInitialized(_this));\n\n      _this.state._delayedEvent = false; // can't remember if this is useful?\n\n      clearWindowListeners(_this.controller, _this.stateKey); // TODO add back when setPointerCapture is widely wupported\n      // this.removePointers()\n    };\n\n    _this.onCancel = function () {\n      if (_this.state.canceled) return;\n\n      _this.updateGestureState({\n        canceled: true\n      });\n\n      _this.state._active = false;\n\n      _this.updateSharedState({\n        down: false,\n        buttons: 0,\n        touches: 0\n      });\n\n      requestAnimationFrame(function () {\n        return _this.fireGestureHandler();\n      });\n    };\n\n    _this.onClick = function (event) {\n      if (!_this.state._isTap) event.stopPropagation();\n    };\n\n    return _this;\n  }\n\n  var _proto = DragRecognizer.prototype;\n\n  _proto.startDrag = function startDrag(event) {\n    var values = getPointerEventValues(event);\n    this.updateSharedState(getGenericEventData(event));\n    this.updateGestureState(_extends({}, getStartGestureState(this, values, event), getGenericPayload(this, event, true), {\n      _pointerId: event.pointerId,\n      cancel: this.onCancel\n    }));\n    this.updateGestureState(this.getMovement(values));\n    this.fireGestureHandler();\n  };\n\n  _proto.addBindings = function addBindings$1(bindings) {\n    addBindings(bindings, 'onPointerDown', this.onDragStart);\n\n    if (this.config.filterTaps) {\n      var handler = this.controller.config.eventOptions.capture ? 'onClick' : 'onClickCapture';\n      addBindings(bindings, handler, this.onClick);\n    } // TODO add back when setPointerCapture is widely wupported\n    // addBindings(bindings, 'onPointerMove', this.onDragChange)\n    // addBindings(bindings, 'onPointerUp', this.onDragEnd)\n    // addBindings(bindings, 'onPointerCancel', this.onDragEnd)\n\n  };\n\n  return DragRecognizer;\n}(CoordinatesRecognizer);\n/**\r\n * Inlined from https://github.com/alexreardon/memoize-one\r\n */\n\n\nfunction memoizeOne(resultFn, isEqual) {\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n\n  function memoized() {\n    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    }\n\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  }\n\n  return memoized;\n}\n/**\r\n * Taken from https://github.com/FormidableLabs/react-fast-compare\r\n *\r\n * Dropped comments and ArrayBuffer handling\r\n */\n\n\nfunction equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n    var length, i, keys;\n\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length !== b.length) return false;\n\n      for (i = length; i-- !== 0;) {\n        if (!equal(a[i], b[i])) return false;\n      }\n\n      return true;\n    }\n\n    var it;\n\n    if (typeof Map === 'function' && a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n\n      while (!(i = it.next()).done) {\n        if (!b.has(i.value[0])) return false;\n      }\n\n      it = a.entries();\n\n      while (!(i = it.next()).done) {\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      }\n\n      return true;\n    }\n\n    if (typeof Set === 'function' && a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n\n      while (!(i = it.next()).done) {\n        if (!b.has(i.value[0])) return false;\n      }\n\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    }\n\n    if (typeof Element !== 'undefined' && a instanceof Element) return false;\n\n    for (i = length; i-- !== 0;) {\n      if (keys[i] === '_owner' && a.$$typeof) continue;\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n\n    return true;\n  } // true if both NaN, false otherwise — NaN !== NaN → true\n  // eslint-disable-next-line no-self-compare\n\n\n  return a !== a && b !== b;\n}\n\nfunction isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if ((error.message || '').match(/stack|recursion/i)) {\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n\n    throw error;\n  }\n}\n/**\r\n * Drag hook.\r\n *\r\n * @param handler - the function fired every time the drag gesture updates\r\n * @param [config={}] - the config object including generic options and drag options\r\n */\n\n\nfunction useDrag(handler, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  RecognizersMap.set('drag', DragRecognizer);\n  var buildDragConfig = useRef();\n\n  if (!buildDragConfig.current) {\n    buildDragConfig.current = memoizeOne(_buildDragConfig, isEqual);\n  }\n\n  return useRecognizers({\n    drag: handler\n  }, buildDragConfig.current(config));\n}\n/**\r\n * @private\r\n * Abstract class for distance/angle-based gesture recongizers\r\n */\n\n\nvar DistanceAngleRecognizer = /*#__PURE__*/function (_Recognizer) {\n  _inheritsLoose(DistanceAngleRecognizer, _Recognizer);\n\n  function DistanceAngleRecognizer() {\n    return _Recognizer.apply(this, arguments) || this;\n  }\n\n  var _proto = DistanceAngleRecognizer.prototype;\n\n  _proto.getInternalMovement = function getInternalMovement(values, state) {\n    var prev_a = state.values[1]; // not be defined if ctrl+wheel is used for zoom only\n\n    var d = values[0],\n        _values$ = values[1],\n        a = _values$ === void 0 ? prev_a : _values$;\n    var delta_a = a - prev_a;\n    var next_turns = state.turns;\n    if (Math.abs(delta_a) > 270) next_turns += sign(delta_a);\n    return subV([d, a - 360 * next_turns], state.initial);\n  };\n\n  _proto.getKinematics = function getKinematics(values, event) {\n    var state = this.getMovement(values);\n    var turns = (values[1] - state.movement[1] - this.state.initial[1]) / 360;\n    var dt = event.timeStamp - this.state.timeStamp;\n    var kinematics = calculateAllKinematics(state.movement, state.delta, dt);\n    return _extends({\n      turns: turns\n    }, state, kinematics);\n  };\n\n  _proto.mapStateValues = function mapStateValues(state) {\n    return {\n      da: state.values,\n      vdva: state.velocities\n    };\n  };\n\n  return DistanceAngleRecognizer;\n}(Recognizer);\n\nvar PinchRecognizer = /*#__PURE__*/function (_DistanceAngleRecogni) {\n  _inheritsLoose(PinchRecognizer, _DistanceAngleRecogni);\n\n  function PinchRecognizer() {\n    var _this;\n\n    _this = _DistanceAngleRecogni.apply(this, arguments) || this;\n    _this.ingKey = 'pinching';\n    _this.stateKey = 'pinch';\n\n    _this.pinchShouldStart = function (event) {\n      var _getGenericEventData = getGenericEventData(event),\n          touches = _getGenericEventData.touches;\n\n      return _this.enabled && touches === 2;\n    };\n\n    _this.onPinchStart = function (event) {\n      if (!_this.pinchShouldStart(event)) return;\n\n      var _getTwoTouchesEventDa = getTwoTouchesEventData(event),\n          values = _getTwoTouchesEventDa.values,\n          origin = _getTwoTouchesEventDa.origin;\n\n      _this.updateSharedState(getGenericEventData(event));\n\n      _this.updateGestureState(_extends({}, getStartGestureState(_assertThisInitialized(_this), values, event), getGenericPayload(_assertThisInitialized(_this), event, true), {\n        cancel: _this.onCancel,\n        origin: origin\n      }));\n\n      _this.updateGestureState(_this.getMovement(values));\n\n      _this.fireGestureHandler();\n    };\n\n    _this.onPinchChange = function (event) {\n      var _this$state = _this.state,\n          canceled = _this$state.canceled,\n          _active = _this$state._active;\n      if (canceled || !_active) return;\n      var genericEventData = getGenericEventData(event);\n\n      _this.updateSharedState(genericEventData);\n\n      var _getTwoTouchesEventDa2 = getTwoTouchesEventData(event),\n          values = _getTwoTouchesEventDa2.values,\n          origin = _getTwoTouchesEventDa2.origin; // @ts-ignore\n\n\n      var kinematics = _this.getKinematics(values, event);\n\n      _this.updateGestureState(_extends({}, getGenericPayload(_assertThisInitialized(_this), event), kinematics, {\n        origin: origin\n      }));\n\n      _this.fireGestureHandler();\n    };\n\n    _this.onPinchEnd = function (event) {\n      if (!_this.state.active) return;\n      _this.state._active = false;\n\n      _this.updateSharedState({\n        down: false,\n        touches: 0\n      });\n\n      _this.updateGestureState(_extends({}, getGenericPayload(_assertThisInitialized(_this), event), _this.getMovement(_this.state.values)));\n\n      _this.fireGestureHandler();\n    };\n\n    _this.onCancel = function () {\n      if (_this.state.canceled) return;\n      _this.state._active = false;\n\n      _this.updateGestureState({\n        canceled: true\n      });\n\n      _this.updateSharedState({\n        down: false,\n        touches: 0\n      });\n\n      requestAnimationFrame(function () {\n        return _this.fireGestureHandler();\n      });\n    };\n    /**\r\n     * PINCH WITH WEBKIT GESTURES\r\n     */\n\n\n    _this.onGestureStart = function (event) {\n      if (!_this.enabled) return;\n      event.preventDefault(); // useless\n\n      var values = getWebkitGestureEventValues(event);\n\n      _this.updateSharedState(getGenericEventData(event));\n\n      _this.updateGestureState(_extends({}, getStartGestureState(_assertThisInitialized(_this), values, event), getGenericPayload(_assertThisInitialized(_this), event, true), {\n        origin: [event.clientX, event.clientY],\n        cancel: _this.onCancel\n      }));\n\n      _this.updateGestureState(_this.getMovement(values));\n\n      _this.fireGestureHandler();\n    };\n\n    _this.onGestureChange = function (event) {\n      var _this$state2 = _this.state,\n          canceled = _this$state2.canceled,\n          _active = _this$state2._active;\n      if (canceled || !_active) return;\n      event.preventDefault();\n      var genericEventData = getGenericEventData(event);\n\n      _this.updateSharedState(genericEventData);\n\n      var values = getWebkitGestureEventValues(event);\n\n      var kinematics = _this.getKinematics(values, event);\n\n      _this.updateGestureState(_extends({}, getGenericPayload(_assertThisInitialized(_this), event), kinematics, {\n        origin: [event.clientX, event.clientY]\n      }));\n\n      _this.fireGestureHandler();\n    };\n\n    _this.onGestureEnd = function (event) {\n      event.preventDefault();\n      if (!_this.state.active) return;\n      _this.state._active = false;\n\n      _this.updateSharedState({\n        down: false,\n        touches: 0\n      });\n\n      _this.updateGestureState(_extends({}, getGenericPayload(_assertThisInitialized(_this), event), _this.getMovement(_this.state.values), {\n        origin: [event.clientX, event.clientY]\n      }));\n\n      _this.fireGestureHandler();\n    };\n    /**\r\n     * PINCH WITH WHEEL\r\n     */\n\n\n    _this.wheelShouldRun = function (event) {\n      return _this.enabled && event.ctrlKey;\n    };\n\n    _this.getWheelValuesFromEvent = function (event) {\n      var _getWheelEventValues = getWheelEventValues(event),\n          delta_d = _getWheelEventValues[1];\n\n      var _this$state$values = _this.state.values,\n          prev_d = _this$state$values[0],\n          prev_a = _this$state$values[1];\n      var d = prev_d - delta_d;\n      var a = prev_a !== void 0 ? prev_a : 0;\n      return {\n        values: [d, a],\n        origin: [event.clientX, event.clientY],\n        delta: [0, delta_d]\n      };\n    };\n\n    _this.onWheel = function (event) {\n      if (!_this.wheelShouldRun(event)) return;\n\n      _this.setTimeout(_this.onWheelEnd);\n\n      if (!_this.state._active) _this.onWheelStart(event);else _this.onWheelChange(event);\n    };\n\n    _this.onWheelStart = function (event) {\n      var _this$getWheelValuesF = _this.getWheelValuesFromEvent(event),\n          values = _this$getWheelValuesF.values,\n          delta = _this$getWheelValuesF.delta,\n          origin = _this$getWheelValuesF.origin;\n\n      if (event.cancelable) event.preventDefault();else if (process.env.NODE_ENV === 'development') {\n        console.warn('To properly support zoom on trackpads, try using the `domTarget` option and `config.eventOptions.passive` set to `false`. This message will only appear in development mode.');\n      }\n\n      _this.updateSharedState(getGenericEventData(event));\n\n      _this.updateGestureState(_extends({}, getStartGestureState(_assertThisInitialized(_this), values, event), getGenericPayload(_assertThisInitialized(_this), event, true), {\n        initial: _this.state.values,\n        offset: values,\n        delta: delta,\n        origin: origin\n      }));\n\n      _this.updateGestureState(_this.getMovement(values));\n\n      _this.fireGestureHandler();\n    };\n\n    _this.onWheelChange = function (event) {\n      _this.updateSharedState(getGenericEventData(event));\n\n      var _this$getWheelValuesF2 = _this.getWheelValuesFromEvent(event),\n          values = _this$getWheelValuesF2.values,\n          origin = _this$getWheelValuesF2.origin,\n          delta = _this$getWheelValuesF2.delta;\n\n      _this.updateGestureState(_extends({}, getGenericPayload(_assertThisInitialized(_this), event), _this.getKinematics(values, event), {\n        origin: origin,\n        delta: delta\n      }));\n\n      _this.fireGestureHandler();\n    };\n\n    _this.onWheelEnd = function () {\n      _this.state._active = false;\n\n      _this.updateGestureState(_this.getMovement(_this.state.values));\n\n      _this.fireGestureHandler();\n    };\n\n    return _this;\n  }\n\n  var _proto = PinchRecognizer.prototype;\n\n  _proto.addBindings = function addBindings$1(bindings) {\n    // Only try to use gesture events when they are supported and domTarget is set\n    // as React doesn't support gesture handlers.\n    if (this.controller.config.domTarget && !supportsTouchEvents() && supportsGestureEvents()) {\n      addBindings(bindings, 'onGestureStart', this.onGestureStart);\n      addBindings(bindings, 'onGestureChange', this.onGestureChange);\n      addBindings(bindings, 'onGestureEnd', this.onGestureEnd);\n    } else {\n      addBindings(bindings, 'onTouchStart', this.onPinchStart);\n      addBindings(bindings, 'onTouchMove', this.onPinchChange);\n      addBindings(bindings, 'onTouchEnd', this.onPinchEnd);\n      addBindings(bindings, 'onTouchCancel', this.onPinchEnd);\n      addBindings(bindings, 'onWheel', this.onWheel);\n    }\n  };\n\n  return PinchRecognizer;\n}(DistanceAngleRecognizer);\n/**\r\n * Pinch hook.\r\n *\r\n * @param handler - the function fired every time the pinch gesture updates\r\n * @param [config={}] - the config object including generic options and pinch options\r\n */\n\n\nfunction usePinch(handler, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  RecognizersMap.set('pinch', PinchRecognizer);\n  var buildPinchConfig = useRef();\n\n  if (!buildPinchConfig.current) {\n    buildPinchConfig.current = memoizeOne(_buildPinchConfig, isEqual);\n  }\n\n  return useRecognizers({\n    pinch: handler\n  }, buildPinchConfig.current(config));\n}\n\nvar WheelRecognizer = /*#__PURE__*/function (_CoordinatesRecognize) {\n  _inheritsLoose(WheelRecognizer, _CoordinatesRecognize);\n\n  function WheelRecognizer() {\n    var _this;\n\n    _this = _CoordinatesRecognize.apply(this, arguments) || this;\n    _this.ingKey = 'wheeling';\n    _this.stateKey = 'wheel';\n    _this.debounced = true;\n\n    _this.handleEvent = function (event) {\n      if (event.ctrlKey && 'pinch' in _this.controller.handlers) return;\n      if (!_this.enabled) return;\n\n      _this.setTimeout(_this.onEnd);\n\n      _this.updateSharedState(getGenericEventData(event));\n\n      var values = addV(getWheelEventValues(event), _this.state.values);\n\n      if (!_this.state._active) {\n        _this.updateGestureState(_extends({}, getStartGestureState(_assertThisInitialized(_this), values, event), getGenericPayload(_assertThisInitialized(_this), event, true), {\n          initial: _this.state.values\n        }));\n\n        var movement = _this.getMovement(values);\n\n        var geometry = calculateAllGeometry(movement.delta);\n\n        _this.updateGestureState(movement);\n\n        _this.updateGestureState(geometry);\n      } else {\n        _this.updateGestureState(_extends({}, getGenericPayload(_assertThisInitialized(_this), event), _this.getKinematics(values, event)));\n      }\n\n      _this.fireGestureHandler();\n    };\n\n    _this.onEnd = function () {\n      var movement = _this.getMovement(_this.state.values);\n\n      _this.updateGestureState(movement);\n\n      _this.updateGestureState({\n        _active: false,\n        velocities: [0, 0],\n        velocity: 0\n      });\n\n      _this.fireGestureHandler();\n    };\n\n    return _this;\n  }\n\n  var _proto = WheelRecognizer.prototype;\n\n  _proto.addBindings = function addBindings$1(bindings) {\n    addBindings(bindings, 'onWheel', this.handleEvent);\n  };\n\n  return WheelRecognizer;\n}(CoordinatesRecognizer);\n/**\r\n * Wheel hook.\r\n *\r\n * @param handler - the function fired every time the wheel gesture updates\r\n * @param the config object including generic options and wheel options\r\n */\n\n\nfunction useWheel(handler, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  RecognizersMap.set('wheel', WheelRecognizer);\n  var buildWheelConfig = useRef();\n\n  if (!buildWheelConfig.current) {\n    buildWheelConfig.current = memoizeOne(_buildWheelConfig, isEqual);\n  }\n\n  return useRecognizers({\n    wheel: handler\n  }, buildWheelConfig.current(config));\n}\n\nvar MoveRecognizer = /*#__PURE__*/function (_CoordinatesRecognize) {\n  _inheritsLoose(MoveRecognizer, _CoordinatesRecognize);\n\n  function MoveRecognizer() {\n    var _this;\n\n    _this = _CoordinatesRecognize.apply(this, arguments) || this;\n    _this.ingKey = 'moving';\n    _this.stateKey = 'move';\n    _this.debounced = true;\n\n    _this.onMove = function (event) {\n      if (!_this.enabled) return;\n\n      _this.setTimeout(_this.onMoveEnd);\n\n      if (!_this.state._active) _this.onMoveStart(event);else _this.onMoveChange(event);\n    };\n\n    _this.onMoveStart = function (event) {\n      _this.updateSharedState(getGenericEventData(event));\n\n      var values = getPointerEventValues(event);\n\n      _this.updateGestureState(_extends({}, getStartGestureState(_assertThisInitialized(_this), values, event), getGenericPayload(_assertThisInitialized(_this), event, true)));\n\n      _this.updateGestureState(_this.getMovement(values));\n\n      _this.fireGestureHandler();\n    };\n\n    _this.onMoveChange = function (event) {\n      _this.updateSharedState(getGenericEventData(event));\n\n      var values = getPointerEventValues(event);\n\n      _this.updateGestureState(_extends({}, getGenericPayload(_assertThisInitialized(_this), event), _this.getKinematics(values, event)));\n\n      _this.fireGestureHandler();\n    };\n\n    _this.onMoveEnd = function () {\n      var values = _this.state.values;\n\n      _this.updateGestureState(_this.getMovement(values));\n\n      _this.updateGestureState({\n        velocities: [0, 0],\n        velocity: 0,\n        _active: false\n      });\n\n      _this.fireGestureHandler();\n    };\n\n    _this.onPointerEnter = function (event) {\n      _this.controller.state.shared.hovering = true;\n      if (!_this.controller.config.enabled) return;\n\n      if (_this.controller.config.hover.enabled) {\n        var values = getPointerEventValues(event);\n\n        var state = _extends({}, _this.controller.state.shared, _this.state, getGenericPayload(_assertThisInitialized(_this), event, true), {\n          values: values,\n          active: true,\n          hovering: true\n        });\n\n        _this.controller.handlers.hover(_extends({}, state, _this.mapStateValues(state)));\n      }\n\n      if ('move' in _this.controller.handlers) _this.onMoveStart(event);\n    };\n\n    _this.onPointerLeave = function (event) {\n      _this.controller.state.shared.hovering = false;\n      if ('move' in _this.controller.handlers) _this.onMoveEnd();\n      if (!_this.controller.config.hover.enabled) return;\n      var values = getPointerEventValues(event);\n\n      var state = _extends({}, _this.controller.state.shared, _this.state, getGenericPayload(_assertThisInitialized(_this), event), {\n        values: values,\n        active: false\n      });\n\n      _this.controller.handlers.hover(_extends({}, state, _this.mapStateValues(state)));\n    };\n\n    return _this;\n  }\n\n  var _proto = MoveRecognizer.prototype;\n\n  _proto.addBindings = function addBindings$1(bindings) {\n    if ('move' in this.controller.handlers) {\n      addBindings(bindings, 'onPointerMove', this.onMove);\n    }\n\n    if ('hover' in this.controller.handlers) {\n      addBindings(bindings, 'onPointerEnter', this.onPointerEnter);\n      addBindings(bindings, 'onPointerLeave', this.onPointerLeave);\n    }\n  };\n\n  return MoveRecognizer;\n}(CoordinatesRecognizer);\n/**\r\n * Move hook.\r\n *\r\n * @param handler - the function fired every time the move gesture updates\r\n * @param [config={}] - the config object including generic options and move options\r\n */\n\n\nfunction useMove(handler, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  RecognizersMap.set('move', MoveRecognizer);\n  var buildMoveConfig = useRef();\n\n  if (!buildMoveConfig.current) {\n    buildMoveConfig.current = memoizeOne(_buildMoveConfig, isEqual);\n  }\n\n  return useRecognizers({\n    move: handler\n  }, buildMoveConfig.current(config));\n}\n/**\r\n * Hover hook.\r\n *\r\n * @param handler - the function fired every time the hover gesture updates\r\n * @param [config={}] - the config object including generic options and hover options\r\n */\n\n\nfunction useHover(handler, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  RecognizersMap.set('hover', MoveRecognizer);\n  var buildHoverConfig = useRef();\n\n  if (!buildHoverConfig.current) {\n    buildHoverConfig.current = memoizeOne(_buildHoverConfig, isEqual);\n  }\n\n  return useRecognizers({\n    hover: handler\n  }, buildHoverConfig.current(config));\n}\n\nvar ScrollRecognizer = /*#__PURE__*/function (_CoordinatesRecognize) {\n  _inheritsLoose(ScrollRecognizer, _CoordinatesRecognize);\n\n  function ScrollRecognizer() {\n    var _this;\n\n    _this = _CoordinatesRecognize.apply(this, arguments) || this;\n    _this.ingKey = 'scrolling';\n    _this.stateKey = 'scroll';\n    _this.debounced = true;\n\n    _this.handleEvent = function (event) {\n      if (!_this.enabled) return;\n\n      _this.clearTimeout();\n\n      _this.setTimeout(_this.onEnd);\n\n      var values = getScrollEventValues(event);\n\n      _this.updateSharedState(getGenericEventData(event));\n\n      if (!_this.state._active) {\n        _this.updateGestureState(_extends({}, getStartGestureState(_assertThisInitialized(_this), values, event), getGenericPayload(_assertThisInitialized(_this), event, true), {\n          initial: _this.state.values\n        }));\n\n        var movementDetection = _this.getMovement(values);\n\n        var geometry = calculateAllGeometry(movementDetection.delta);\n\n        _this.updateGestureState(movementDetection);\n\n        _this.updateGestureState(geometry);\n      } else {\n        _this.updateGestureState(_extends({}, getGenericPayload(_assertThisInitialized(_this), event), _this.getKinematics(values, event)));\n      }\n\n      _this.fireGestureHandler();\n    };\n\n    _this.onEnd = function () {\n      _this.state._active = false;\n\n      _this.updateGestureState(_extends({}, _this.getMovement(_this.state.values), {\n        velocities: [0, 0],\n        velocity: 0\n      }));\n\n      _this.fireGestureHandler();\n    };\n\n    return _this;\n  }\n\n  var _proto = ScrollRecognizer.prototype;\n\n  _proto.addBindings = function addBindings$1(bindings) {\n    addBindings(bindings, 'onScroll', this.handleEvent);\n  };\n\n  return ScrollRecognizer;\n}(CoordinatesRecognizer);\n/**\r\n * Scroll hook.\r\n *\r\n * @param handler - the function fired every time the scroll gesture updates\r\n * @param [config={}] - the config object including generic options and scroll options\r\n */\n\n\nfunction useScroll(handler, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  RecognizersMap.set('scroll', ScrollRecognizer);\n  var buildScrollConfig = useRef();\n\n  if (!buildScrollConfig.current) {\n    buildScrollConfig.current = memoizeOne(_buildScrollConfig, isEqual);\n  }\n\n  return useRecognizers({\n    scroll: handler\n  }, buildScrollConfig.current(config));\n}\n\nvar RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/;\n\nfunction sortHandlers(handlers) {\n  var _native = {};\n  var handle = {};\n  var actions = new Set();\n\n  for (var key in handlers) {\n    if (RE_NOT_NATIVE.test(key)) {\n      actions.add(RegExp.lastMatch);\n      handle[key] = handlers[key];\n    } else {\n      _native[key] = handlers[key];\n    }\n  }\n\n  return [handle, _native, actions];\n}\n/**\r\n * @public\r\n *\r\n * The most complete gesture hook, allowing support for multiple gestures.\r\n *\r\n * @param {Handlers} handlers - an object with on[Gesture] keys containg gesture handlers\r\n * @param {UseGestureConfig} [config={}] - the full config object\r\n * @returns {(...args: any[]) => HookReturnType<Config>}\r\n */\n\n\nfunction useGesture(_handlers, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var _sortHandlers = sortHandlers(_handlers),\n      handlers = _sortHandlers[0],\n      nativeHandlers = _sortHandlers[1],\n      actions = _sortHandlers[2];\n\n  RecognizersMap.set('drag', DragRecognizer);\n  RecognizersMap.set('hover', MoveRecognizer);\n  RecognizersMap.set('move', MoveRecognizer);\n  RecognizersMap.set('pinch', PinchRecognizer);\n  RecognizersMap.set('scroll', ScrollRecognizer);\n  RecognizersMap.set('wheel', WheelRecognizer);\n  var mergedConfig = buildComplexConfig(config, actions);\n  var internalHandlers = {};\n  if (actions.has('onDrag')) internalHandlers.drag = includeStartEndHandlers(handlers, 'onDrag');\n  if (actions.has('onWheel')) internalHandlers.wheel = includeStartEndHandlers(handlers, 'onWheel');\n  if (actions.has('onScroll')) internalHandlers.scroll = includeStartEndHandlers(handlers, 'onScroll');\n  if (actions.has('onMove')) internalHandlers.move = includeStartEndHandlers(handlers, 'onMove');\n  if (actions.has('onPinch')) internalHandlers.pinch = includeStartEndHandlers(handlers, 'onPinch');\n  if (actions.has('onHover')) internalHandlers.hover = handlers.onHover;\n  return useRecognizers(internalHandlers, mergedConfig, nativeHandlers);\n}\n\nfunction includeStartEndHandlers(handlers, handlerKey) {\n  var startKey = handlerKey + 'Start';\n  var endKey = handlerKey + 'End';\n\n  var fn = function fn(state) {\n    var memo = undefined;\n    if (state.first && startKey in handlers) handlers[startKey](state);\n    if (handlerKey in handlers) memo = handlers[handlerKey](state);\n    if (state.last && endKey in handlers) handlers[endKey](state);\n    return memo;\n  };\n\n  return fn;\n}\n\nexport { addV, rubberbandIfOutOfBounds, subV, useDrag, useGesture, useHover, useMove, usePinch, useScroll, useWheel };","map":{"version":3,"mappings":"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","names":["addV","v1","v2","map","v","i","subV","calculateDistance","movement","Math","hypot","calculateAllGeometry","delta","dl","alpha","direction","distance","calculateAllKinematics","dt","beta","velocity","velocities","sign","x","Number","minMax","value","min","max","rubberband2","constant","pow","rubberband","dimension","abs","Infinity","rubberbandIfOutOfBounds","position","noop","chainFns","fns","length","result","fn","apply","arguments","ensureVector","fallback","undefined","Error","Array","isArray","assignDefault","Object","assign","valueFn","args","resolveWith","config","resolvers","entries","key","resolver","call","DEFAULT_DRAG_DELAY","DEFAULT_RUBBERBAND","DEFAULT_SWIPE_VELOCITY","DEFAULT_SWIPE_DISTANCE","InternalGestureOptionsNormalizers","threshold","enabled","triggerAllEvents","initial","InternalCoordinatesOptionsNormalizers","axis","lockDirection","bounds","state","left","right","top","bottom","isBrowser","window","document","createElement","InternalGenericOptionsNormalizers","domTarget","eventOptions","passive","_ref$passive","capture","_ref$capture","InternalDistanceAngleOptionsNormalizers","_value","_key","distanceBounds","_ref2$distanceBounds","angleBounds","_ref2$angleBounds","_distanceBounds","D","_angleBounds","A","InternalDragOptionsNormalizers","_k","filterTaps","_ref3$filterTaps","_ref3$lockDirection","swipeVelocity","swipeDistance","delay","getInternalGenericOptions","getInternalCoordinatesOptions","getInternalDistanceAngleOptions","getInternalDragOptions","_buildMoveConfig","rest","opts","move","_buildHoverConfig","hover","_buildDragConfig","drag","_buildPinchConfig","pinch","_buildScrollConfig","scroll","_buildWheelConfig","wheel","buildComplexConfig","actions","Set","mergedConfig","has","getInitial","mixed","_active","_blocked","_intentional","_movement","_initial","_bounds","_lastEventType","event","intentional","values","offset","lastOffset","previous","first","last","active","timeStamp","startTime","elapsedTime","cancel","canceled","memo","getInitialState","shared","hovering","scrolling","wheeling","dragging","moving","pinching","touches","buttons","down","shiftKey","altKey","metaKey","ctrlKey","xy","vxvy","_isTap","_delayedEvent","_pointerId","tap","swipe","da","vdva","origin","turns","RecognizersMap","Map","Recognizer","controller","callback","ms","clearTimeout","_this","timeouts","stateKey","setTimeout","forceFlag","debounced","clean","prev_active","next_active","ingKey","mapStateValues","newMemo","handler","updateSharedState","sharedState","updateGestureState","gestureState","checkIntentionality","getMovement","T","wasIntentional","prevMovement","M","getInternalMovement","i0","getIntentionalDisplacement","i1","intentionalityCheck","__cachedBounds","__cachedInitial","_rubberband","computeRubberband","handlers","Vx","Vy","Rx","Ry","X1","X2","Y1","Y2","getGenericPayload","isStartEvent","type","getStartGestureState","recognizer","partial","func","Controller","classes","bindings","RecognizerClass","addBindings","nativeRefs","updateDomListeners","getPropsListener","bind","getDomTargetFromConfig","removeListeners","takeAll","domListeners","forEach","clearAllWindowListeners","windowListeners","el","clearWindowListeners","updateWindowListeners","listeners","addListeners","name","slice","toLowerCase","push","props","captureString","fnsArray","array","splice","current","options","eventName","eventHandler","addEventListener","removeEventListener","useRecognizers","nativeHandlers","resolveClasses","React","useMemo","useEffect","effect","deprecationNoticeForDomTarget","process","env","NODE_ENV","console","warn","internalHandlers","add","get","CoordinatesRecognizer","absX","absY","getKinematics","WEBKIT_DISTANCE_SCALE_FACTOR","supportsGestureEvents","GestureEvent","e","supportsTouchEvents","ontouchstart","getTouchEvents","targetTouches","changedTouches","getGenericEventData","touchEvents","getPointerEventValues","clientX","clientY","getScrollEventValues","currentTarget","scrollX","scrollY","scrollLeft","scrollTop","getWheelEventValues","deltaX","deltaY","getWebkitGestureEventValues","scale","rotation","getTwoTouchesEventData","B","dx","dy","cx","cy","nativeEvent","angle","atan2","PI","TAP_DISTANCE_THRESHOLD","SWIPE_MAX_ELAPSED_TIME","DragRecognizer","_inheritsLoose","onDragChange","onDragEnd","pointerId","persist","startDrag","genericEventData","kinematics","genericPayload","realDistance","fireGestureHandler","vx","vy","mx","my","ix","iy","svx","svy","sx","sy","endState","_CoordinatesRecognize","requestAnimationFrame","stopPropagation","_proto","onCancel","onDragStart","onClick","memoizeOne","resultFn","isEqual","lastThis","lastArgs","lastResult","calledOnce","memoized","newArgs","equal","a","b","constructor","keys","it","size","next","done","RegExp","source","flags","valueOf","prototype","toString","hasOwnProperty","Element","$$typeof","error","message","match","useDrag","set","buildDragConfig","useRef","memoize","DistanceAngleRecognizer","prev_a","d","delta_a","next_turns","PinchRecognizer","pinchShouldStart","preventDefault","delta_d","prev_d","wheelShouldRun","onWheelEnd","onWheelStart","onWheelChange","getWheelValuesFromEvent","cancelable","onGestureStart","onGestureChange","onGestureEnd","onPinchStart","onPinchChange","onPinchEnd","onWheel","usePinch","buildPinchConfig","WheelRecognizer","onEnd","geometry","handleEvent","useWheel","buildWheelConfig","MoveRecognizer","onMoveEnd","onMoveStart","onMoveChange","onMove","onPointerEnter","onPointerLeave","useMove","buildMoveConfig","useHover","buildHoverConfig","ScrollRecognizer","movementDetection","useScroll","buildScrollConfig","RE_NOT_NATIVE","sortHandlers","native","handle","test","lastMatch","useGesture","_handlers","includeStartEndHandlers","onHover","handlerKey","startKey","endKey"],"sources":["/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/utils/math.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/utils/rubberband.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/utils/utils.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/utils/resolveOptionsWith.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/utils/config.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/hooks/buildConfig.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/utils/state.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/recognizers/Recognizer.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/Controller.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/hooks/useRecognizers.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/recognizers/CoordinatesRecognizer.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/utils/event.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/recognizers/DragRecognizer.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/utils/memoize-one.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/utils/react-fast-compare.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/hooks/useDrag.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/recognizers/DistanceAngleRecognizer.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/recognizers/PinchRecognizer.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/hooks/usePinch.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/recognizers/WheelRecognizer.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/hooks/useWheel.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/recognizers/MoveRecognizer.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/hooks/useMove.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/hooks/useHover.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/recognizers/ScrollRecognizer.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/hooks/useScroll.ts","/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/node_modules/react-use-gesture/src/hooks/useGesture.ts"],"sourcesContent":["// vector add\nexport function addV<T extends number[]>(v1: T, v2: T): T {\n  return v1.map((v, i) => v + v2[i]) as T\n}\n\n// vector substract\nexport function subV<T extends number[]>(v1: T, v2: T): T {\n  return v1.map((v, i) => v - v2[i]) as T\n}\n\n/**\n * Calculates distance\n * @param movement the difference between current and initial vectors\n * @returns distance\n */\nexport function calculateDistance(movement: number[]): number {\n  return Math.hypot(...movement)\n}\n\ninterface Kinematics {\n  velocities: number[]\n  velocity: number\n  distance: number\n  direction: number[]\n}\n\nexport function calculateAllGeometry<T extends number[]>(movement: T, delta: T = movement) {\n  const dl = calculateDistance(delta)\n\n  const alpha = dl === 0 ? 0 : 1 / dl\n\n  const direction = delta.map(v => alpha * v) as T\n  const distance = calculateDistance(movement)\n\n  return { distance, direction }\n}\n\n/**\n * Calculates all kinematics\n * @template T the expected vector type\n * @param movement the difference between current and initial vectors\n * @param delta the difference between current and previous vectors\n * @param delta_t the time difference between current and previous timestamps\n * @returns all kinematics\n */\nexport function calculateAllKinematics<T extends number[]>(movement: T, delta: T, dt: number): Kinematics {\n  const dl = calculateDistance(delta)\n\n  const alpha = dl === 0 ? 0 : 1 / dl\n  const beta = dt === 0 ? 0 : 1 / dt\n\n  const velocity = beta * dl\n  const velocities = delta.map(v => beta * v)\n  const direction = delta.map(v => alpha * v)\n  const distance = calculateDistance(movement)\n\n  return { velocities, velocity, distance, direction }\n}\n\n/**\n * Because IE doesn't support `Math.sign` function, so we use the polyfill version of the function.\n * This polyfill function is suggested by Mozilla:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign#Polyfill\n * @param x target number\n */\nexport function sign(x: number) {\n  if (Math.sign) return Math.sign(x)\n  return Number(x > 0) - Number(x < 0) || +x\n}\n","function minMax(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(value, max))\n}\n\n// Based on @aholachek ;)\n// https://twitter.com/chpwn/status/285540192096497664\n// iOS constant = 0.55\n\n// https://medium.com/@nathangitter/building-fluid-interfaces-ios-swift-9732bb934bf5\nfunction rubberband2(distance: number, constant: number) {\n  // default constant from the article is 0.7\n  return Math.pow(distance, constant * 5)\n}\n\nfunction rubberband(distance: number, dimension: number, constant: number) {\n  if (dimension === 0 || Math.abs(dimension) === Infinity) return rubberband2(distance, constant)\n  return (distance * dimension * constant) / (dimension + constant * distance)\n}\n\nexport function rubberbandIfOutOfBounds(position: number, min: number, max: number, constant = 0.15) {\n  if (constant === 0) return minMax(position, min, max)\n  if (position < min) return -rubberband(min - position, max - min, constant) + min\n  if (position > max) return +rubberband(position - max, max - min, constant) + max\n  return position\n}\n","export function noop() {}\n\n/**\n * TODO Beware that only optimized cases are covered in tests =)\n * TODO Need to cover general case as well\n *\n * @param fns\n */\nexport function chainFns(...fns: Function[]): Function {\n  if (fns.length === 0) return noop\n  if (fns.length === 1) return fns[0]\n\n  return function (this: any) {\n    var result\n    for (let fn of fns) {\n      result = fn.apply(this, arguments) || result\n    }\n    return result\n  }\n}\n\n/**\n * Expects a simple value or 2D vector (an array with 2 elements) and\n * always returns 2D vector. If simple value is passed, returns a\n * vector with this value as both coordinates.\n *\n * @param value\n */\nexport function ensureVector<T>(value: T | [T, T] | undefined, fallback?: T | [T, T]): [T, T] {\n  if (value === undefined) {\n    if (fallback === undefined) {\n      throw new Error('Must define fallback value if undefined is expected')\n    }\n    value = fallback\n  }\n\n  if (Array.isArray(value)) return value\n  return [value, value]\n}\n\n/**\n * Helper for defining a default value\n *\n * @param value\n * @param fallback\n */\nexport function assignDefault<T extends Object>(value: Partial<T> | undefined, fallback: T): T {\n  return Object.assign({}, fallback, value || {})\n}\n\n/**\n * Resolves getters (functions) by calling them\n * If simple value is given it just passes through\n *\n * @param v\n */\nexport function valueFn<T>(v: T | ((...args: any[]) => T), ...args: any[]): T {\n  if (typeof v === 'function') {\n    // @ts-ignore\n    return v(...args)\n  } else {\n    return v\n  }\n}\n","export type Resolver = (x: any, key: string, obj: object) => any\nexport type ResolverMap = { [k: string]: Resolver | ResolverMap | boolean }\n\nexport function resolveWith<T extends { [k: string]: any }, V extends { [k: string]: any }>(\n  config: Partial<T> = {},\n  resolvers: ResolverMap\n): V {\n  const result: any = {}\n\n  for (const [key, resolver] of Object.entries(resolvers))\n    switch (typeof resolver) {\n      case 'function':\n        result[key] = resolver.call(result, config[key], key, config)\n        break\n      case 'object':\n        result[key] = resolveWith(config[key], resolver)\n        break\n      case 'boolean':\n        if (resolver) result[key] = config[key]\n        break\n    }\n\n  return result\n}\n","import { ensureVector, assignDefault, valueFn } from './utils'\nimport { resolveWith } from './resolveOptionsWith'\n\nimport {\n  GenericOptions,\n  InternalGenericOptions,\n  DragConfig,\n  GestureOptions,\n  InternalDragOptions,\n  InternalGestureOptions,\n  CoordinatesConfig,\n  InternalCoordinatesOptions,\n  DistanceAngleConfig,\n  InternalDistanceAngleOptions,\n  Vector2,\n  Bounds,\n  StateKey,\n  State,\n  CoordinatesKey,\n  DistanceAngleKey,\n} from '../types'\n\nexport const DEFAULT_DRAG_DELAY = 180\nexport const DEFAULT_RUBBERBAND = 0.15\nexport const DEFAULT_SWIPE_VELOCITY = 0.5\nexport const DEFAULT_SWIPE_DISTANCE = 60\n\nconst InternalGestureOptionsNormalizers = {\n  threshold(value: number | Vector2 = 0) {\n    return ensureVector(value)\n  },\n\n  rubberband(value: number | boolean | Vector2 = 0): Vector2 {\n    switch (value) {\n      case true:\n        return ensureVector(DEFAULT_RUBBERBAND)\n      case false:\n        return ensureVector(0)\n      default:\n        return ensureVector(value)\n    }\n  },\n\n  enabled(value = true) {\n    return value\n  },\n\n  triggerAllEvents(value = false) {\n    return value\n  },\n\n  initial(value = 0) {\n    if (typeof value === 'function') return value\n    return ensureVector(value)\n  },\n}\n\nconst InternalCoordinatesOptionsNormalizers = {\n  ...InternalGestureOptionsNormalizers,\n  axis: true,\n  lockDirection(value = false) {\n    return value\n  },\n  bounds(value: Bounds | ((state?: State) => Bounds) = {}) {\n    if (typeof value === 'function')\n      return (state?: State) => InternalCoordinatesOptionsNormalizers.bounds(value(state))\n\n    const { left = -Infinity, right = Infinity, top = -Infinity, bottom = Infinity } = value\n\n    return [\n      [left, right],\n      [top, bottom],\n    ]\n  },\n}\n\nconst isBrowser = typeof window !== 'undefined' && window.document && window.document.createElement\n\nconst InternalGenericOptionsNormalizers = {\n  enabled(value = true) {\n    return value\n  },\n  domTarget: true,\n  window(value = isBrowser ? window : undefined) {\n    return value\n  },\n  eventOptions({ passive = true, capture = false } = {}) {\n    return { passive, capture }\n  },\n}\n\nconst InternalDistanceAngleOptionsNormalizers = {\n  ...InternalGestureOptionsNormalizers,\n\n  bounds(_value: undefined, _key: string, { distanceBounds = {}, angleBounds = {} }: any) {\n    const _distanceBounds = (state?: State) => {\n      const D = assignDefault(valueFn(distanceBounds, state), { min: -Infinity, max: Infinity })\n      return [D.min, D.max]\n    }\n\n    const _angleBounds = (state?: State) => {\n      const A = assignDefault(valueFn(angleBounds, state), { min: -Infinity, max: Infinity })\n      return [A.min, A.max]\n    }\n\n    if (typeof distanceBounds !== 'function' && typeof angleBounds !== 'function')\n      return [_distanceBounds(), _angleBounds()]\n\n    return (state?: State) => [_distanceBounds(state), _angleBounds(state)]\n  },\n}\n\nconst InternalDragOptionsNormalizers = {\n  ...InternalCoordinatesOptionsNormalizers,\n\n  threshold(\n    this: any,\n    v: number | Vector2 | undefined,\n    _k: string,\n    { filterTaps = false, lockDirection = false, axis = undefined }: any\n  ) {\n    const A = ensureVector(v, filterTaps ? 3 : lockDirection ? 1 : axis ? 1 : 0) as Vector2\n    this.filterTaps = filterTaps || A[0] + A[1] > 0\n    return A\n  },\n\n  swipeVelocity(v: number | Vector2 = DEFAULT_SWIPE_VELOCITY) {\n    return ensureVector(v)\n  },\n  swipeDistance(v: number | Vector2 = DEFAULT_SWIPE_DISTANCE) {\n    return ensureVector(v)\n  },\n\n  delay(value: number | boolean = 0) {\n    switch (value) {\n      case true:\n        return DEFAULT_DRAG_DELAY\n      case false:\n        return 0\n      default:\n        return value\n    }\n  },\n}\n\nexport function getInternalGenericOptions(config: GenericOptions = {}): InternalGenericOptions {\n  // TODO warn when passive is set to true and domTarget is undefined\n  return resolveWith<GenericOptions, InternalGenericOptions>(config, InternalGenericOptionsNormalizers)\n}\n\nexport function getInternalGestureOptions<T extends StateKey>(\n  config: GestureOptions<T> = {}\n): InternalGestureOptions<T> {\n  return resolveWith<GestureOptions<T>, InternalGestureOptions<T>>(config, InternalGestureOptionsNormalizers)\n}\n\nexport function getInternalCoordinatesOptions<T extends CoordinatesKey>(\n  config: CoordinatesConfig<T> = {}\n): InternalCoordinatesOptions<T> {\n  return resolveWith<CoordinatesConfig<T>, InternalCoordinatesOptions<T>>(config, InternalCoordinatesOptionsNormalizers)\n}\n\nexport function getInternalDistanceAngleOptions<T extends DistanceAngleKey>(\n  config: DistanceAngleConfig<T> = {}\n): InternalDistanceAngleOptions<T> {\n  return resolveWith<DistanceAngleConfig<T>, InternalDistanceAngleOptions<T>>(\n    config,\n    InternalDistanceAngleOptionsNormalizers\n  )\n}\n\nexport function getInternalDragOptions(config: DragConfig = {}): InternalDragOptions {\n  return resolveWith<DragConfig, InternalDragOptions>(config, InternalDragOptionsNormalizers)\n}\n","import {\n  InternalConfig,\n  UseMoveConfig,\n  UseHoverConfig,\n  UseDragConfig,\n  UsePinchConfig,\n  UseScrollConfig,\n  UseWheelConfig,\n} from '../types'\n\nimport {\n  getInternalGenericOptions,\n  getInternalCoordinatesOptions,\n  getInternalDragOptions,\n  getInternalDistanceAngleOptions,\n} from '../utils/config'\n\nimport { UseGestureConfig } from '../types'\n\nexport function _buildMoveConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseMoveConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.move = getInternalCoordinatesOptions(rest)\n  return opts\n}\n\nexport function _buildHoverConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseHoverConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.hover = { enabled: true, ...rest }\n  return opts\n}\n\nexport function _buildDragConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseDragConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.drag = getInternalDragOptions(rest)\n  return opts\n}\n\nexport function _buildPinchConfig({ domTarget, eventOptions, window, enabled, ...rest }: UsePinchConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.pinch = getInternalDistanceAngleOptions(rest)\n  return opts\n}\n\nexport function _buildScrollConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseScrollConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.scroll = getInternalCoordinatesOptions(rest)\n  return opts\n}\n\nexport function _buildWheelConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseWheelConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.wheel = getInternalCoordinatesOptions(rest)\n  return opts\n}\n\nexport function buildComplexConfig(config: UseGestureConfig = {}, actions: Set<string> = new Set()) {\n  const { drag, wheel, move, scroll, pinch, hover, eventOptions, window, domTarget, enabled } = config\n\n  const mergedConfig: InternalConfig = getInternalGenericOptions({ eventOptions, window, domTarget, enabled })\n\n  if (actions.has('onDrag')) mergedConfig.drag = getInternalDragOptions(drag)\n  if (actions.has('onWheel')) mergedConfig.wheel = getInternalCoordinatesOptions(wheel)\n  if (actions.has('onScroll')) mergedConfig.scroll = getInternalCoordinatesOptions(scroll)\n  if (actions.has('onMove')) mergedConfig.move = getInternalCoordinatesOptions(move)\n  if (actions.has('onPinch')) mergedConfig.pinch = getInternalDistanceAngleOptions(pinch)\n  if (actions.has('onHover')) mergedConfig.hover = { enabled: true, ...hover }\n\n  return mergedConfig\n}\n","import { noop } from './utils'\nimport { CommonGestureState, Coordinates, State, DistanceAngle, Vector2, DragState } from '../types'\n\nfunction getInitial<T>(mixed: T): T & CommonGestureState {\n  return {\n    _active: false,\n    _blocked: false,\n    _intentional: [false, false],\n    _movement: [0, 0],\n    _initial: [0, 0],\n    _bounds: [\n      [-Infinity, Infinity],\n      [-Infinity, Infinity],\n    ],\n    _lastEventType: undefined,\n    event: undefined,\n    // currentTarget: undefined,\n    // pointerId: undefined,\n    intentional: false,\n    values: [0, 0],\n    velocities: [0, 0],\n    delta: [0, 0],\n    movement: [0, 0],\n    offset: [0, 0],\n    lastOffset: [0, 0],\n    direction: [0, 0],\n    initial: [0, 0],\n    previous: [0, 0],\n    first: false,\n    last: false,\n    active: false,\n    timeStamp: 0,\n    startTime: 0,\n    elapsedTime: 0,\n    cancel: noop,\n    canceled: false,\n    memo: undefined,\n    args: undefined,\n    ...mixed,\n  }\n}\n\nexport function getInitialState(): State {\n  const shared = {\n    hovering: false,\n    scrolling: false,\n    wheeling: false,\n    dragging: false,\n    moving: false,\n    pinching: false,\n    touches: 0,\n    buttons: 0,\n    down: false,\n    shiftKey: false,\n    altKey: false,\n    metaKey: false,\n    ctrlKey: false,\n  }\n\n  const drag = getInitial<DragState & Coordinates>({\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n    _isTap: true,\n    _delayedEvent: false,\n    _pointerId: undefined,\n    tap: false,\n    swipe: [0, 0],\n  })\n\n  const pinch = getInitial<DistanceAngle>({\n    da: [0, 0] as Vector2,\n    vdva: [0, 0] as Vector2,\n    // @ts-ignore origin can never be passed as undefined in userland\n    origin: undefined,\n    turns: 0,\n  })\n\n  const wheel = getInitial<Coordinates>({\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n  })\n\n  const move = getInitial<Coordinates>({\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n  })\n\n  const scroll = getInitial<Coordinates>({\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n  })\n\n  return { shared, drag, pinch, wheel, move, scroll }\n}\n","import Controller from '../Controller'\nimport {\n  StateKey,\n  SharedGestureState,\n  IngKey,\n  InternalConfig,\n  GestureKey,\n  GestureState,\n  EventTypes,\n  PartialGestureState,\n  Vector2,\n  FullGestureState,\n  RecognizerClass,\n} from '../types'\nimport { getInitialState } from '../utils/state'\nimport { rubberbandIfOutOfBounds } from '../utils/rubberband'\nimport { subV, addV, sign } from '../utils/math'\nimport { valueFn } from '../utils/utils'\n\nexport const RecognizersMap = new Map<GestureKey, RecognizerClass>()\n\n/**\n * @private\n * Recognizer abstract class.\n */\nexport default abstract class Recognizer<T extends StateKey = StateKey> {\n  abstract readonly ingKey: IngKey // dragging, scrolling, etc.\n  protected debounced: Boolean = true\n  abstract readonly stateKey: T\n\n  /**\n   * Creates an instance of a gesture recognizer.\n   * @param stateKey drag, move, pinch, etc.\n   * @param controller the controller attached to the gesture\n   * @param [args] the args that should be passed to the gesture handler\n   */\n  constructor(readonly controller: Controller, readonly args: any[] = []) {}\n\n  // Returns the gesture config\n  get config(): NonNullable<InternalConfig[T]> {\n    return this.controller.config[this.stateKey]!\n  }\n\n  // Is the gesture enabled\n  get enabled(): boolean {\n    return this.controller.config.enabled && this.config.enabled\n  }\n\n  // Returns the controller state for a given gesture\n  get state(): GestureState<T> {\n    return this.controller.state[this.stateKey]\n  }\n\n  // Returns the gesture handler\n  get handler() {\n    return this.controller.handlers[this.stateKey]!\n  }\n\n  // Convenience method to update the shared state\n  protected updateSharedState(sharedState: Partial<SharedGestureState> | null) {\n    Object.assign(this.controller.state.shared, sharedState)\n  }\n\n  // Convenience method to update the gesture state\n  protected updateGestureState(gestureState: PartialGestureState<T> | null) {\n    Object.assign(this.state, gestureState)\n  }\n\n  // Convenience method to set a timeout for a given gesture\n  protected setTimeout = (callback: (...args: any[]) => void, ms: number = 140, ...args: any[]): void => {\n    clearTimeout(this.controller.timeouts[this.stateKey])\n    this.controller.timeouts[this.stateKey] = window.setTimeout(callback, ms, ...args)\n  }\n\n  // Convenience method to clear a timeout for a given gesture\n  protected clearTimeout = () => {\n    clearTimeout(this.controller.timeouts[this.stateKey])\n  }\n\n  protected abstract getKinematics(values: Vector2, event: React.UIEvent | UIEvent): PartialGestureState<T>\n  protected abstract getInternalMovement(values: Vector2, state: GestureState<T>): Vector2\n  protected abstract mapStateValues(state: GestureState<T>): Omit<PartialGestureState<T>, 'event'>\n\n  public abstract addBindings(bindings: any): void\n\n  /**\n   * Returns state properties depending on the movement and state.\n   *\n   * Should be overriden for custom behavior, doesn't do anything in the implementation\n   * below.\n   */\n  protected checkIntentionality(\n    _intentional: [false | number, false | number],\n    _movement: Vector2\n  ): PartialGestureState<T> {\n    return { _intentional, _blocked: false } as PartialGestureState<T>\n  }\n\n  /**\n   * Returns basic movement properties for the gesture based on the next values and current state.\n   */\n  protected getMovement(values: Vector2): PartialGestureState<T> {\n    const { initial, bounds, rubberband, threshold: T } = this.config\n\n    const { _bounds, _initial, _active, _intentional: wasIntentional, lastOffset, movement: prevMovement } = this.state\n    const M = this.getInternalMovement(values, this.state)\n\n    const i0 = wasIntentional[0] === false ? getIntentionalDisplacement(M[0], T[0]) : wasIntentional[0]\n    const i1 = wasIntentional[1] === false ? getIntentionalDisplacement(M[1], T[1]) : wasIntentional[1]\n\n    // Get gesture specific state properties based on intentionality and movement.\n    const intentionalityCheck = this.checkIntentionality([i0, i1], M)\n    if (intentionalityCheck._blocked) {\n      return { ...intentionalityCheck, _movement: M, delta: [0, 0] }\n    }\n\n    const _intentional = intentionalityCheck._intentional!\n    const _movement = M\n\n    let __cachedBounds\n    let __cachedInitial\n\n    if (_intentional[0] !== false && wasIntentional[0] === false) {\n      __cachedInitial = valueFn(initial, this.state)\n      __cachedBounds = valueFn(bounds, this.state)\n      _initial[0] = __cachedInitial[0]\n      _bounds[0] = __cachedBounds[0]\n    }\n    if (_intentional[1] !== false && wasIntentional[1] === false) {\n      __cachedInitial = __cachedInitial ?? valueFn(initial, this.state)\n      __cachedBounds = __cachedBounds ?? valueFn(bounds, this.state)\n      _initial[1] = __cachedInitial[1]\n      _bounds[1] = __cachedBounds[1]\n    }\n\n    /**\n     * The movement sent to the handler has 0 in its dimensions when intentionality is false.\n     * It is calculated from the actual movement minus the threshold.\n     */\n    let movement: Vector2 = [\n      _intentional[0] !== false ? M[0] - _intentional[0] : _initial[0],\n      _intentional[1] !== false ? M[1] - _intentional[1] : _initial[1],\n    ]\n\n    const offset = addV(movement, lastOffset)\n\n    /**\n     * Rubberband should be 0 when the gesture is no longer active, so that movement\n     * and offset can return within their bounds.\n     */\n    const _rubberband: Vector2 = _active ? rubberband : [0, 0]\n    movement = computeRubberband(_bounds, addV(movement, _initial), _rubberband)\n\n    return {\n      ...intentionalityCheck,\n      intentional: _intentional[0] !== false || _intentional[1] !== false,\n      _initial,\n      _movement,\n      movement,\n      values,\n      offset: computeRubberband(_bounds, offset, _rubberband),\n      delta: subV(movement, prevMovement),\n    } as PartialGestureState<T>\n  }\n\n  // Cleans the gesture. Can be overriden by gestures.\n  protected clean() {\n    this.clearTimeout()\n  }\n\n  /**\n   * Fires the gesture handler\n   */\n  protected fireGestureHandler = (forceFlag: boolean = false): FullGestureState<T> | null => {\n    /**\n     * If the gesture has been blocked (this can happen when the gesture has started in an unwanted direction),\n     * clean everything and don't do anything.\n     */\n    if (this.state._blocked) {\n      // we need debounced gestures to end by themselves\n      if (!this.debounced) {\n        this.state._active = false\n        this.clean()\n      }\n      return null\n    }\n\n    // If the gesture has no intentional dimension, don't fire the handler.\n    if (!forceFlag && !this.state.intentional && !this.config.triggerAllEvents) return null\n\n    if (this.state.intentional) {\n      const prev_active = this.state.active\n      const next_active = this.state._active\n\n      this.state.active = next_active\n      this.state.first = next_active && !prev_active\n      this.state.last = prev_active && !next_active\n\n      this.controller.state.shared[this.ingKey] = next_active // Sets dragging, pinching, etc. to the gesture active state\n    }\n    const state = {\n      ...this.controller.state.shared,\n      ...this.state,\n      ...this.mapStateValues(this.state), // Sets xy or da to the gesture state values\n    } as FullGestureState<T>\n\n    // @ts-ignore\n    const newMemo = this.handler(state)\n\n    // Sets memo to the returned value of the handler (unless it's not undefined)\n    this.state.memo = newMemo !== void 0 ? newMemo : this.state.memo\n\n    // Cleans the gesture when the gesture is no longer active.\n    if (!this.state._active) this.clean()\n\n    return state\n  }\n}\n\n//--------------------------------------------\n\nfunction getIntentionalDisplacement(movement: number, threshold: number): number | false {\n  if (Math.abs(movement) >= threshold) {\n    return sign(movement) * threshold\n  } else {\n    return false\n  }\n}\n\nfunction computeRubberband(bounds: [Vector2, Vector2], [Vx, Vy]: Vector2, [Rx, Ry]: Vector2): Vector2 {\n  const [[X1, X2], [Y1, Y2]] = bounds\n\n  return [rubberbandIfOutOfBounds(Vx, X1, X2, Rx), rubberbandIfOutOfBounds(Vy, Y1, Y2, Ry)]\n}\n\n/**\n * Returns a generic, common payload for all gestures from an event.\n */\nexport function getGenericPayload<T extends StateKey>(\n  { state, args }: Recognizer<T>,\n  event: EventTypes[T],\n  isStartEvent?: boolean\n) {\n  const { timeStamp, type: _lastEventType } = event\n  const previous = state.values\n  const elapsedTime = isStartEvent ? 0 : timeStamp - state.startTime!\n  return { _lastEventType, event, timeStamp, elapsedTime, args, previous }\n}\n\n/**\n * Returns the reinitialized start state for the gesture.\n * Should be common to all gestures.\n */\nexport function getStartGestureState<T extends StateKey>(\n  recognizer: Recognizer<T>,\n  values: Vector2,\n  event: EventTypes[T]\n) {\n  const offset = recognizer.state.offset\n  const startTime = event.timeStamp\n\n  return {\n    ...getInitialState()[recognizer.stateKey],\n    _active: true,\n    values,\n    initial: values,\n    offset,\n    lastOffset: offset,\n    startTime,\n  }\n}\n","import {\n  StateKey,\n  State,\n  Fn,\n  ReactEventHandlerKey,\n  ReactEventHandlers,\n  InternalConfig,\n  InternalHandlers,\n  RecognizerClass,\n} from './types'\nimport { getInitialState } from './utils/state'\nimport { chainFns } from './utils/utils'\n\nfunction partial(func: Fn, state: any) {\n  return function (event: any, ...args: any) {\n    // @ts-ignore\n    return func.call(this, { ...state, event }, ...args)\n  }\n}\n\n/**\n * The controller will keep track of the state for all gestures and also keep\n * track of timeouts, and window listeners.\n */\nexport default class Controller {\n  public nativeRefs!: any\n  public config!: InternalConfig\n  public handlers!: InternalHandlers\n  public state: State // state for all gestures\n  public timeouts: { [stateKey in StateKey]?: number } // tracks timeouts of debounced gestures\n  public domListeners: [string, Fn][] // when config.domTarget is set, we attach events directly to the dom\n  public windowListeners: { [stateKey in StateKey]?: [string, Function][] } // keeps track of window listeners added by gestures (drag only at the moment)\n\n  constructor(private classes: Set<RecognizerClass>) {\n    this.state = getInitialState()\n    this.timeouts = {}\n    this.domListeners = []\n    this.windowListeners = {}\n  }\n\n  public bind = (...args: any[]) => {\n    const bindings: { [key: string]: Function[] } = {}\n\n    for (let RecognizerClass of this.classes) new RecognizerClass(this, args).addBindings(bindings)\n\n    // we also add event bindings for native handlers\n    for (let [event, handler] of Object.entries(this.nativeRefs))\n      addBindings(bindings, event, partial(handler, { ...this.state.shared, args }))\n\n    if (this.config.domTarget) {\n      // If config.domTarget is set we add event listeners to it and return the clean function.\n      return updateDomListeners(this, bindings)\n    } else {\n      // If not, we return an object that contains gesture handlers mapped to react handler event keys.\n      return getPropsListener(this, bindings)\n    }\n  }\n\n  public effect = () => {\n    if (this.config.domTarget) this.bind()\n    return this.clean\n  }\n\n  /**\n   * Function ran on component unmount: cleans timeouts and removes dom listeners set by the bind function.\n   */\n  public clean = (): void => {\n    const domTarget = getDomTargetFromConfig(this.config)\n    const { eventOptions } = this.config\n    if (domTarget) removeListeners(domTarget, takeAll(this.domListeners), eventOptions)\n    Object.values(this.timeouts).forEach(clearTimeout)\n    clearAllWindowListeners(this)\n  }\n}\n\nexport function clearAllWindowListeners(controller: Controller) {\n  const {\n    config: { window: el, eventOptions },\n    windowListeners,\n  } = controller\n  if (!el) return\n\n  for (let stateKey in windowListeners) {\n    const handlers = windowListeners[stateKey as StateKey]\n    removeListeners(el, handlers, eventOptions)\n  }\n\n  controller.windowListeners = {}\n}\n\nexport function clearWindowListeners({ config, windowListeners }: Controller, stateKey: StateKey) {\n  if (!config.window) return\n  removeListeners(config.window, windowListeners[stateKey], config.eventOptions)\n  delete windowListeners[stateKey]\n}\n\nexport function updateWindowListeners(\n  { config, windowListeners }: Controller,\n  stateKey: StateKey,\n  listeners: [string, Fn][] = []\n) {\n  if (!config.window) return\n  removeListeners(config.window, windowListeners[stateKey], config.eventOptions)\n  addListeners(config.window, (windowListeners[stateKey] = listeners), config.eventOptions)\n}\n\nfunction updateDomListeners({ config, domListeners }: Controller, bindings: { [key: string]: Function[] }) {\n  const domTarget = getDomTargetFromConfig(config)\n  if (!domTarget) throw new Error('domTarget must be defined')\n  const { eventOptions } = config\n\n  removeListeners(domTarget, takeAll(domListeners), eventOptions)\n\n  for (let [key, fns] of Object.entries(bindings)) {\n    const name = key.slice(2).toLowerCase()\n    domListeners.push([name, chainFns(...fns)])\n  }\n\n  addListeners(domTarget, domListeners, eventOptions)\n}\n\nfunction getPropsListener({ config }: Controller, bindings: { [key: string]: Function[] }) {\n  const props: ReactEventHandlers = {}\n  const captureString = config.eventOptions.capture ? 'Capture' : ''\n  for (let [event, fns] of Object.entries(bindings)) {\n    const fnsArray = Array.isArray(fns) ? fns : [fns]\n    const key = (event + captureString) as ReactEventHandlerKey\n    props[key] = chainFns(...(fnsArray as Fn[]))\n  }\n  return props\n}\n\nfunction takeAll<T>(array: Array<T> = []) {\n  return array.splice(0, array.length)\n}\n\nfunction getDomTargetFromConfig({ domTarget }: InternalConfig) {\n  return domTarget && 'current' in domTarget ? domTarget.current : domTarget\n}\n\n/**\n * bindings is an object which keys match ReactEventHandlerKeys.\n * Since a recognizer might want to bind a handler function to an event key already used by a previously\n * added recognizer, we need to make sure that each event key is an array of all the functions mapped for\n * that key.\n */\nexport function addBindings(bindings: any, name: string, fn: Fn): void {\n  if (!bindings[name]) bindings[name] = []\n  bindings[name]!.push(fn)\n}\n\nfunction addListeners(el: EventTarget, listeners: Array<[string, Fn]> = [], options = {}) {\n  for (let [eventName, eventHandler] of listeners) {\n    el.addEventListener(eventName, eventHandler, options)\n  }\n}\n\nfunction removeListeners(el: EventTarget, listeners: Array<[string, Fn]> = [], options = {}) {\n  for (let [eventName, eventHandler] of listeners) {\n    el.removeEventListener(eventName, eventHandler, options)\n  }\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React from 'react'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport Controller from '../Controller'\nimport {\n  InternalConfig,\n  HookReturnType,\n  InternalHandlers,\n  GenericOptions,\n  RecognizerClass,\n  NativeHandlers,\n} from '../types'\n\n/**\n * Utility hook called by all gesture hooks and that will be responsible for the internals.\n *\n * @param handlers\n * @param classes\n * @param config\n * @param nativeHandlers - native handlers such as onClick, onMouseDown, etc.\n */\nexport default function useRecognizers<Config extends Partial<GenericOptions>>(\n  handlers: Partial<InternalHandlers>,\n  config: InternalConfig,\n  nativeHandlers: Partial<NativeHandlers> = {}\n): (...args: any[]) => HookReturnType<Config> {\n  const classes = resolveClasses(handlers)\n\n  const controller = React.useMemo(() => new Controller(classes), [])\n  controller!.config = config\n  controller!.handlers = handlers\n  controller!.nativeRefs = nativeHandlers\n\n  React.useEffect(controller.effect, [])\n\n  // @ts-ignore\n  if (controller.config.domTarget) return deprecationNoticeForDomTarget\n  // @ts-ignore\n  return controller.bind\n}\n\nfunction deprecationNoticeForDomTarget() {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(\n      `Deprecation notice: When the \\`domTarget\\` option is specified, you don't need to write \\`useEffect(bind, [bind])\\` anymore: event binding is now made handled internally to this lib.\\n\\nNext version won't return anything when \\`domTarget\\` is provided, therefore your code will break if you try to call \\`useEffect\\`.`\n    )\n  }\n}\n\nfunction resolveClasses(internalHandlers: Partial<InternalHandlers>) {\n  const classes = new Set<RecognizerClass>()\n\n  if (internalHandlers.drag) classes.add(RecognizersMap.get('drag')!)\n  if (internalHandlers.wheel) classes.add(RecognizersMap.get('wheel')!)\n  if (internalHandlers.scroll) classes.add(RecognizersMap.get('scroll')!)\n  if (internalHandlers.move) classes.add(RecognizersMap.get('move')!)\n  if (internalHandlers.pinch) classes.add(RecognizersMap.get('pinch')!)\n  if (internalHandlers.hover) classes.add(RecognizersMap.get('hover')!)\n\n  return classes\n}\n","import Recognizer from './Recognizer'\nimport { calculateAllKinematics, subV } from '../utils/math'\nimport { Vector2, PartialGestureState, GestureState, CoordinatesKey } from '../types'\n\n/**\n * @private\n * Abstract class for coordinates-based gesture recongizers\n */\nexport default abstract class CoordinatesRecognizer<T extends CoordinatesKey> extends Recognizer<T> {\n  /**\n   * Returns the real movement (without taking intentionality into acount)\n   */\n  protected getInternalMovement(values: Vector2, state: GestureState<T>): Vector2 {\n    return subV(values, state.initial)\n  }\n\n  /**\n   * In coordinates-based gesture, this function will detect the first intentional axis,\n   * lock the gesture axis if lockDirection is specified in the config, block the gesture\n   * if the first intentional axis doesn't match the specified axis in config.\n   */\n  protected checkIntentionality(\n    _intentional: [false | number, false | number],\n    _movement: Vector2\n  ): PartialGestureState<T> {\n    if (_intentional[0] === false && _intentional[1] === false) {\n      return { _intentional, axis: this.state.axis } as PartialGestureState<T>\n    }\n    const [absX, absY] = _movement.map(Math.abs)\n    const axis = this.state.axis || (absX > absY ? 'x' : absX < absY ? 'y' : undefined)\n    if (!this.config.axis && !this.config.lockDirection) return { _intentional, _blocked: false, axis } as any\n    if (!axis) return { _intentional: [false, false], _blocked: false, axis } as any\n    if (!!this.config.axis && axis !== this.config.axis) return { _intentional, _blocked: true, axis } as any\n    _intentional![axis === 'x' ? 1 : 0] = false\n    return { _intentional, _blocked: false, axis } as any\n  }\n\n  getKinematics(values: Vector2, event: React.UIEvent | UIEvent): PartialGestureState<T> {\n    const state = this.getMovement(values)\n    if (!state._blocked) {\n      const dt = event.timeStamp - this.state.timeStamp!\n      Object.assign(state, calculateAllKinematics(state.movement!, state.delta!, dt))\n    }\n    return state\n  }\n\n  protected mapStateValues(state: GestureState<T>): Omit<PartialGestureState<T>, 'event'> {\n    return { xy: state.values, vxvy: state.velocities } as Omit<PartialGestureState<T>, 'event'>\n  }\n}\n","import { Vector2, WebKitGestureEvent, DomEvents } from '../types'\n\nconst WEBKIT_DISTANCE_SCALE_FACTOR = 260\n\n/**\n * Whether the browser supports GestureEvent (ie Safari)\n * @returns true if the browser supports gesture event\n */\nexport function supportsGestureEvents(): boolean {\n  try {\n    // TODO [TS] possibly find GestureEvent definitions?\n    // @ts-ignore: no type definitions for webkit GestureEvents\n    return 'constructor' in GestureEvent\n  } catch (e) {\n    return false\n  }\n}\n\nexport function supportsTouchEvents(): boolean {\n  return typeof window !== 'undefined' && window.ontouchstart === null\n}\n\nfunction getTouchEvents(event: DomEvents) {\n  if ('touches' in event) {\n    const { targetTouches, changedTouches } = event\n    return targetTouches.length > 0 ? targetTouches : changedTouches\n  }\n  return null\n}\n\nexport function getGenericEventData(event: DomEvents) {\n  const buttons = 'buttons' in event ? event.buttons : 0\n  const touchEvents = getTouchEvents(event)\n  const touches = (touchEvents && touchEvents.length) || 0\n  const down = touches > 0 || buttons > 0\n\n  const { shiftKey, altKey, metaKey, ctrlKey } = event as any // TODO check if this might create some overrides?\n  return { touches, down, buttons, shiftKey, altKey, metaKey, ctrlKey }\n}\n\n/**\n * Gets pointer event values.\n * @param event\n * @returns pointer event values\n */\nexport function getPointerEventValues(\n  event: TouchEvent | React.TouchEvent | React.PointerEvent | PointerEvent\n): Vector2 {\n  const touchEvents = getTouchEvents(event)\n  const { clientX, clientY } = touchEvents ? touchEvents[0] : (event as React.PointerEvent)\n  return [clientX, clientY]\n}\n\n/**\n * Gets scroll event values\n * @param event\n * @returns scroll event values\n */\nexport function getScrollEventValues(event: React.UIEvent | UIEvent): Vector2 {\n  // If the currentTarget is the window then we return the scrollX/Y position.\n  // If not (ie the currentTarget is a DOM element), then we return scrollLeft/Top\n  const { scrollX, scrollY, scrollLeft, scrollTop } = event.currentTarget as Element & Window\n  return [scrollX || scrollLeft || 0, scrollY || scrollTop || 0]\n}\n\n/**\n * Gets wheel event values.\n * @param event\n * @returns wheel event values\n */\nexport function getWheelEventValues(event: React.WheelEvent | WheelEvent): Vector2 {\n  const { deltaX, deltaY } = event\n  //TODO implement polyfill ?\n  // https://developer.mozilla.org/en-US/docs/Web/Events/wheel#Polyfill\n  return [deltaX, deltaY]\n}\n\n/**\n * Gets webkit gesture event values.\n * @param event\n * @returns webkit gesture event values\n */\nexport function getWebkitGestureEventValues(event: WebKitGestureEvent): Vector2 {\n  return [event.scale * WEBKIT_DISTANCE_SCALE_FACTOR, event.rotation]\n}\n\n/**\n * Gets two touches event data\n * @param event\n * @returns two touches event data\n */\nexport function getTwoTouchesEventData(event: React.TouchEvent | TouchEvent) {\n  const { targetTouches } = event\n  const A = targetTouches[0],\n    B = targetTouches[1]\n\n  const dx = B.clientX - A.clientX\n  const dy = B.clientY - A.clientY\n  const cx = (B.clientX + A.clientX) / 2\n  const cy = (B.clientY + A.clientY) / 2\n\n  const e: any = 'nativeEvent' in event ? event.nativeEvent : event\n\n  const distance = Math.hypot(dx, dy)\n  const angle = (e.rotation as number) ?? -(Math.atan2(dx, dy) * 180) / Math.PI\n\n  const values: Vector2 = [distance, angle]\n  const origin: Vector2 = [cx, cy]\n\n  return { values, origin }\n}\n","import CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getPointerEventValues, getGenericEventData } from '../utils/event'\nimport { calculateDistance, sign } from '../utils/math'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings, updateWindowListeners, clearWindowListeners } from '../Controller'\n\nexport const TAP_DISTANCE_THRESHOLD = 3\nexport const SWIPE_MAX_ELAPSED_TIME = 220\n\nexport class DragRecognizer extends CoordinatesRecognizer<'drag'> {\n  readonly ingKey = 'dragging'\n  readonly stateKey = 'drag'\n\n  /**\n   * TODO add back when setPointerCapture is widely wupported\n   * https://caniuse.com/#search=setPointerCapture\n   * private setPointers = (event: UseGestureEvent<PointerEvent>) => {\n   *   const { currentTarget, pointerId } = event\n   *   if (currentTarget) currentTarget.setPointerCapture(pointerId)\n   *   this.updateGestureState({ currentTarget, pointerId })\n   * }\n\n   * private removePointers = () => {\n   *   const { currentTarget, pointerId } = this.state\n   *   if (currentTarget && pointerId) currentTarget.releasePointerCapture(pointerId)\n   * }\n   */\n\n  onDragStart = (event: React.PointerEvent | PointerEvent): void => {\n    if (!this.enabled || this.state._active) return\n\n    /**\n     * TODO add back when setPointerCapture is widely supported\n     * this.setPointers(event as PointerEvent)\n     */\n\n    updateWindowListeners(this.controller, this.stateKey, [\n      ['pointermove', this.onDragChange],\n      ['pointerup', this.onDragEnd],\n      ['pointercancel', this.onDragEnd],\n    ])\n\n    // We set the state pointerId to the event.pointerId so we can make sure\n    // that we lock the drag to the event initiating the gesture\n    this.updateGestureState({ _pointerId: event.pointerId })\n\n    if (this.config.delay > 0) {\n      this.state._delayedEvent = true\n      // If it's a React SyntheticEvent we need to persist it so that we can use it async\n      if ('persist' in event && typeof event.persist === 'function') event.persist()\n      this.setTimeout(this.startDrag.bind(this), this.config.delay, event)\n    } else {\n      this.startDrag(event)\n    }\n  }\n\n  startDrag(event: React.PointerEvent | PointerEvent) {\n    const values = getPointerEventValues(event)\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n      _pointerId: event.pointerId,\n      cancel: this.onCancel,\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onDragChange = (event: PointerEvent): void => {\n    // If the gesture was canceled don't respond to the event.\n    if (this.state.canceled) return\n\n    // If the event pointerId doesn't match the initiating pointerId\n    // don't respond to the event.\n    if (event.pointerId !== this.state._pointerId) return\n\n    // If the gesture isn't active then respond to the event only if\n    // it's been delayed via the `delay` option, in which case start\n    // the gesture immediately.\n    if (!this.state._active) {\n      if (this.state._delayedEvent) {\n        this.clearTimeout()\n        this.startDrag(event)\n      }\n      return\n    }\n\n    const genericEventData = getGenericEventData(event)\n\n    // If the event doesn't have any button / touches left we should cancel\n    // the gesture. This may happen if the drag release happens outside the browser\n    // window.\n    if (!genericEventData.down) {\n      this.onDragEnd(event)\n      return\n    }\n\n    this.updateSharedState(genericEventData)\n    const values = getPointerEventValues(event)\n\n    const kinematics = this.getKinematics(values, event)\n    const genericPayload = getGenericPayload(this, event)\n\n    // This verifies if the drag can be assimilated to a tap by checking\n    // if the real distance of the drag (ie not accounting for the threshold) is\n    // greater than the TAP_DISTANCE_THRESHOLD.\n    let { _isTap } = this.state\n    const realDistance = calculateDistance(kinematics._movement!)\n    if (_isTap && realDistance >= TAP_DISTANCE_THRESHOLD) _isTap = false\n\n    this.updateGestureState({ ...genericPayload, ...kinematics, _isTap })\n\n    this.fireGestureHandler()\n  }\n\n  onDragEnd = (event: PointerEvent): void => {\n    // If the event pointerId doesn't match the initiating pointerId\n    // don't respond to the event.\n    if (event.pointerId !== this.state._pointerId) return\n\n    this.state._active = false\n    this.updateSharedState({ down: false, buttons: 0, touches: 0 })\n\n    const tap = this.state._isTap\n    const [vx, vy] = this.state.velocities\n    const [mx, my] = this.state.movement\n    const [ix, iy] = this.state._intentional\n    const [svx, svy] = this.config.swipeVelocity\n    const [sx, sy] = this.config.swipeDistance\n\n    const endState = {\n      ...getGenericPayload(this, event),\n      ...this.getMovement(this.state.values),\n    }\n\n    const swipe: [number, number] = [0, 0]\n\n    if (endState.elapsedTime < SWIPE_MAX_ELAPSED_TIME) {\n      if (ix !== false && Math.abs(vx) > svx && Math.abs(mx) > sx) swipe[0] = sign(vx)\n      if (iy !== false && Math.abs(vy) > svy && Math.abs(my) > sy) swipe[1] = sign(vy)\n    }\n\n    this.updateGestureState({ ...endState, tap, swipe })\n    this.fireGestureHandler(tap === true)\n  }\n\n  clean = (): void => {\n    super.clean()\n    this.state._delayedEvent = false // can't remember if this is useful?\n    clearWindowListeners(this.controller, this.stateKey)\n    // TODO add back when setPointerCapture is widely wupported\n    // this.removePointers()\n  }\n\n  onCancel = (): void => {\n    if (this.state.canceled) return\n    this.updateGestureState({ canceled: true })\n    this.state._active = false\n    this.updateSharedState({ down: false, buttons: 0, touches: 0 })\n    requestAnimationFrame(() => this.fireGestureHandler())\n  }\n\n  onClick = (event: React.UIEvent | UIEvent): void => {\n    if (!this.state._isTap) event.stopPropagation()\n  }\n\n  addBindings(bindings: any): void {\n    addBindings(bindings, 'onPointerDown', this.onDragStart)\n    if (this.config.filterTaps) {\n      const handler = this.controller.config.eventOptions.capture ? 'onClick' : 'onClickCapture'\n      addBindings(bindings, handler, this.onClick)\n    }\n\n    // TODO add back when setPointerCapture is widely wupported\n    // addBindings(bindings, 'onPointerMove', this.onDragChange)\n    // addBindings(bindings, 'onPointerUp', this.onDragEnd)\n    // addBindings(bindings, 'onPointerCancel', this.onDragEnd)\n  }\n}\n","/**\n * Inlined from https://github.com/alexreardon/memoize-one\n */\n\nexport type EqualityFn = (newArgs: any[], lastArgs: any[]) => boolean\n\nexport default function memoizeOne<ResultFn extends (this: any, ...newArgs: any[]) => ReturnType<ResultFn>>(\n  resultFn: ResultFn,\n  isEqual: EqualityFn\n): ResultFn {\n  let lastThis: unknown\n  let lastArgs: unknown[] = []\n  let lastResult: ReturnType<ResultFn>\n  let calledOnce: boolean = false\n\n  function memoized(this: unknown, ...newArgs: unknown[]): ReturnType<ResultFn> {\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult\n    }\n\n    lastResult = resultFn.apply(this, newArgs)\n    calledOnce = true\n    lastThis = this\n    lastArgs = newArgs\n    return lastResult\n  }\n\n  return memoized as ResultFn\n}\n","/**\n * Taken from https://github.com/FormidableLabs/react-fast-compare\n *\n * Dropped comments and ArrayBuffer handling\n */\n\nfunction equal(a: any, b: any): boolean {\n  if (a === b) return true\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false\n\n    let length, i, keys\n    if (Array.isArray(a)) {\n      length = a.length\n      if (length !== b.length) return false\n      for (i = length; i-- !== 0; ) if (!equal(a[i], b[i])) return false\n      return true\n    }\n\n    let it\n    if (typeof Map === 'function' && a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) return false\n      it = a.entries()\n      while (!(i = it.next()).done) if (!b.has(i.value[0])) return false\n      it = a.entries()\n      while (!(i = it.next()).done) if (!equal(i.value[1], b.get(i.value[0]))) return false\n      return true\n    }\n\n    if (typeof Set === 'function' && a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) return false\n      it = a.entries()\n      while (!(i = it.next()).done) if (!b.has(i.value[0])) return false\n      return true\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf()\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString()\n\n    keys = Object.keys(a)\n    length = keys.length\n    if (length !== Object.keys(b).length) return false\n\n    for (i = length; i-- !== 0; ) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false\n\n    if (typeof Element !== 'undefined' && a instanceof Element) return false\n\n    for (i = length; i-- !== 0; ) {\n      if (keys[i] === '_owner' && a.$$typeof) continue\n      if (!equal(a[keys[i]], b[keys[i]])) return false\n    }\n    return true\n  }\n\n  // true if both NaN, false otherwise — NaN !== NaN → true\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b\n}\n\nexport default function isEqual(a: any, b: any) {\n  try {\n    return equal(a, b)\n  } catch (error) {\n    if ((error.message || '').match(/stack|recursion/i)) {\n      console.warn('react-fast-compare cannot handle circular refs')\n      return false\n    }\n    throw error\n  }\n}\n","import { UseDragConfig, Handler, EventTypes } from '../types'\nimport { _buildDragConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { DragRecognizer } from '../recognizers/DragRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Drag hook.\n *\n * @param handler - the function fired every time the drag gesture updates\n * @param [config={}] - the config object including generic options and drag options\n */\nexport function useDrag<K = EventTypes['drag']>(handler: Handler<'drag', K>, config: UseDragConfig | {} = {}) {\n  RecognizersMap.set('drag', DragRecognizer)\n  const buildDragConfig = useRef<any>()\n  if (!buildDragConfig.current) {\n    buildDragConfig.current = memoize(_buildDragConfig, isEqual)\n  }\n  return useRecognizers<UseDragConfig>({ drag: handler }, buildDragConfig.current(config))\n}\n","import Recognizer from './Recognizer'\nimport { calculateAllKinematics, sign, subV } from '../utils/math'\nimport { Vector2, PartialGestureState, DistanceAngleKey, GestureState } from '../types'\n\n/**\n * @private\n * Abstract class for distance/angle-based gesture recongizers\n */\nexport default abstract class DistanceAngleRecognizer<T extends DistanceAngleKey> extends Recognizer<T> {\n  protected getInternalMovement(values: [number, number?], state: GestureState<T>): Vector2 {\n    const prev_a = state.values[1]\n    // not be defined if ctrl+wheel is used for zoom only\n    let [d, a = prev_a] = values\n\n    let delta_a = a - prev_a\n    let next_turns = state.turns\n    if (Math.abs(delta_a) > 270) next_turns += sign(delta_a)\n    return subV([d, a - 360 * next_turns], state.initial)\n  }\n\n  getKinematics(values: Vector2, event: React.UIEvent | UIEvent): PartialGestureState<T> {\n    const state = this.getMovement(values)\n    const turns = (values[1] - state.movement![1] - this.state.initial[1]) / 360\n    const dt = event.timeStamp - this.state.timeStamp!\n    const kinematics = calculateAllKinematics(state.movement!, state.delta!, dt)\n    return { turns, ...state, ...kinematics }\n  }\n\n  protected mapStateValues(state: GestureState<T>): Omit<PartialGestureState<T>, 'event'> {\n    return { da: state.values, vdva: state.velocities } as Omit<PartialGestureState<T>, 'event'>\n  }\n}\n\n/**\n * @param dangle is a small change of variable on \"lifting\" of the circle.\n * It's expected to be small and cannot be greater than 270 or under -270\n */\nexport function fixContinuity(dangle: number) {\n  dangle -= Math.round(dangle / 360) * 360\n  if (dangle > 270) return dangle - 360\n  if (dangle < -270) return dangle + 360\n  return dangle\n}\n","import DistanceAngleRecognizer from './DistanceAngleRecognizer'\nimport { Vector2, WebKitGestureEvent } from '../types'\nimport {\n  getGenericEventData,\n  getTwoTouchesEventData,\n  getWheelEventValues,\n  supportsGestureEvents,\n  getWebkitGestureEventValues,\n  supportsTouchEvents,\n} from '../utils/event'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings } from '../Controller'\n\nexport class PinchRecognizer extends DistanceAngleRecognizer<'pinch'> {\n  readonly ingKey = 'pinching'\n  readonly stateKey = 'pinch'\n\n  private pinchShouldStart = (event: React.TouchEvent | TouchEvent) => {\n    const { touches } = getGenericEventData(event)\n    return this.enabled && touches === 2\n  }\n\n  onPinchStart = (event: React.TouchEvent | TouchEvent) => {\n    if (!this.pinchShouldStart(event)) return\n\n    const { values, origin } = getTwoTouchesEventData(event)\n\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      // TODO remove after type update\n      // @ts-ignore\n      ...getStartGestureState(this, values, event),\n      // @ts-ignore\n      ...getGenericPayload(this, event, true),\n      cancel: this.onCancel,\n      origin,\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onPinchChange = (event: React.TouchEvent | TouchEvent): void => {\n    const { canceled, _active } = this.state\n    if (canceled || !_active) return\n    const genericEventData = getGenericEventData(event)\n\n    this.updateSharedState(genericEventData)\n\n    const { values, origin } = getTwoTouchesEventData(event)\n    // @ts-ignore\n    const kinematics = this.getKinematics(values, event)\n\n    this.updateGestureState({\n      // @ts-ignore\n      ...getGenericPayload(this, event),\n      ...kinematics,\n      origin,\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onPinchEnd = (event: React.TouchEvent | TouchEvent): void => {\n    if (!this.state.active) return\n    this.state._active = false\n    this.updateSharedState({ down: false, touches: 0 })\n\n    this.updateGestureState({\n      // @ts-ignore\n      ...getGenericPayload(this, event),\n      ...this.getMovement(this.state.values),\n    })\n    this.fireGestureHandler()\n  }\n\n  onCancel = (): void => {\n    if (this.state.canceled) return\n    this.state._active = false\n    this.updateGestureState({ canceled: true })\n    this.updateSharedState({ down: false, touches: 0 })\n\n    requestAnimationFrame(() => this.fireGestureHandler())\n  }\n  /**\n   * PINCH WITH WEBKIT GESTURES\n   */\n\n  onGestureStart = (event: WebKitGestureEvent): void => {\n    if (!this.enabled) return\n    event.preventDefault() // useless\n\n    const values = getWebkitGestureEventValues(event)\n\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n      origin: [event.clientX, event.clientY] as Vector2, // only used on dekstop\n      cancel: this.onCancel,\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onGestureChange = (event: WebKitGestureEvent): void => {\n    const { canceled, _active } = this.state\n    if (canceled || !_active) return\n\n    event.preventDefault()\n\n    const genericEventData = getGenericEventData(event)\n\n    this.updateSharedState(genericEventData)\n\n    const values = getWebkitGestureEventValues(event)\n    const kinematics = this.getKinematics(values, event)\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...kinematics,\n      origin: [event.clientX, event.clientY] as Vector2, // only used on dekstop\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onGestureEnd = (event: WebKitGestureEvent): void => {\n    event.preventDefault()\n    if (!this.state.active) return\n    this.state._active = false\n    this.updateSharedState({ down: false, touches: 0 })\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...this.getMovement(this.state.values),\n      origin: [event.clientX, event.clientY] as Vector2, // only used on dekstop\n    })\n    this.fireGestureHandler()\n  }\n\n  /**\n   * PINCH WITH WHEEL\n   */\n  private wheelShouldRun = (event: React.WheelEvent | WheelEvent) => {\n    return this.enabled && event.ctrlKey\n  }\n\n  private getWheelValuesFromEvent = (event: React.WheelEvent | WheelEvent) => {\n    const [, delta_d] = getWheelEventValues(event)\n    const {\n      values: [prev_d, prev_a],\n    } = this.state\n    const d = prev_d - delta_d\n    const a = prev_a !== void 0 ? prev_a : 0\n\n    return {\n      values: [d, a] as Vector2,\n      origin: [event.clientX, event.clientY] as Vector2,\n      delta: [0, delta_d] as Vector2,\n    }\n  }\n\n  onWheel = (event: React.WheelEvent | WheelEvent): void => {\n    if (!this.wheelShouldRun(event)) return\n    this.setTimeout(this.onWheelEnd)\n\n    if (!this.state._active) this.onWheelStart(event)\n    else this.onWheelChange(event)\n  }\n\n  onWheelStart = (event: React.WheelEvent | WheelEvent): void => {\n    const { values, delta, origin } = this.getWheelValuesFromEvent(event)\n\n    if (event.cancelable) event.preventDefault()\n    else if (process.env.NODE_ENV === 'development') {\n      console.warn(\n        'To properly support zoom on trackpads, try using the `domTarget` option and `config.eventOptions.passive` set to `false`. This message will only appear in development mode.'\n      )\n    }\n\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n      initial: this.state.values,\n      offset: values,\n      delta,\n      origin,\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onWheelChange = (event: React.WheelEvent | WheelEvent): void => {\n    this.updateSharedState(getGenericEventData(event))\n\n    const { values, origin, delta } = this.getWheelValuesFromEvent(event)\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...this.getKinematics(values, event),\n      origin,\n      delta,\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onWheelEnd = (): void => {\n    this.state._active = false\n    this.updateGestureState(this.getMovement(this.state.values))\n    this.fireGestureHandler()\n  }\n\n  addBindings(bindings: any): void {\n    // Only try to use gesture events when they are supported and domTarget is set\n    // as React doesn't support gesture handlers.\n    if (this.controller.config.domTarget && !supportsTouchEvents() && supportsGestureEvents()) {\n      addBindings(bindings, 'onGestureStart', this.onGestureStart)\n      addBindings(bindings, 'onGestureChange', this.onGestureChange)\n      addBindings(bindings, 'onGestureEnd', this.onGestureEnd)\n    } else {\n      addBindings(bindings, 'onTouchStart', this.onPinchStart)\n      addBindings(bindings, 'onTouchMove', this.onPinchChange)\n      addBindings(bindings, 'onTouchEnd', this.onPinchEnd)\n      addBindings(bindings, 'onTouchCancel', this.onPinchEnd)\n      addBindings(bindings, 'onWheel', this.onWheel)\n    }\n  }\n}\n","import { UsePinchConfig, Handler, EventTypes } from '../types'\nimport { _buildPinchConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { PinchRecognizer } from '../recognizers/PinchRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Pinch hook.\n *\n * @param handler - the function fired every time the pinch gesture updates\n * @param [config={}] - the config object including generic options and pinch options\n */\nexport function usePinch<K = EventTypes['pinch']>(handler: Handler<'pinch', K>, config: UsePinchConfig | {} = {}) {\n  RecognizersMap.set('pinch', PinchRecognizer)\n  const buildPinchConfig = useRef<any>()\n  if (!buildPinchConfig.current) {\n    buildPinchConfig.current = memoize(_buildPinchConfig, isEqual)\n  }\n  return useRecognizers<UsePinchConfig>({ pinch: handler }, buildPinchConfig.current(config))\n}\n","import { WheelEvent } from 'react'\nimport CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getWheelEventValues, getGenericEventData } from '../utils/event'\nimport { addV, calculateAllGeometry } from '../utils/math'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings } from '../Controller'\n\nexport class WheelRecognizer extends CoordinatesRecognizer<'wheel'> {\n  readonly ingKey = 'wheeling'\n  readonly stateKey = 'wheel'\n  debounced = true\n\n  handleEvent = (event: React.WheelEvent | WheelEvent): void => {\n    if (event.ctrlKey && 'pinch' in this.controller.handlers) return\n    if (!this.enabled) return\n\n    this.setTimeout(this.onEnd)\n    this.updateSharedState(getGenericEventData(event))\n\n    const values = addV(getWheelEventValues(event), this.state.values)\n\n    if (!this.state._active) {\n      this.updateGestureState({\n        ...getStartGestureState(this, values, event),\n        ...getGenericPayload(this, event, true),\n        initial: this.state.values,\n      })\n\n      const movement = this.getMovement(values)\n      const geometry = calculateAllGeometry(movement.delta!)\n\n      this.updateGestureState(movement)\n      this.updateGestureState(geometry)\n    } else {\n      this.updateGestureState({\n        ...getGenericPayload(this, event),\n        ...this.getKinematics(values, event),\n      })\n    }\n\n    this.fireGestureHandler()\n  }\n\n  onEnd = (): void => {\n    const movement = this.getMovement(this.state.values)\n    this.updateGestureState(movement)\n    this.updateGestureState({ _active: false, velocities: [0, 0], velocity: 0 })\n    this.fireGestureHandler()\n  }\n\n  addBindings(bindings: any): void {\n    addBindings(bindings, 'onWheel', this.handleEvent)\n  }\n}","import { UseWheelConfig, Handler, EventTypes } from '../types'\nimport { _buildWheelConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { WheelRecognizer } from '../recognizers/WheelRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Wheel hook.\n *\n * @param handler - the function fired every time the wheel gesture updates\n * @param the config object including generic options and wheel options\n */\nexport function useWheel<K = EventTypes['wheel']>(handler: Handler<'wheel', K>, config: UseWheelConfig | {} = {}) {\n  RecognizersMap.set('wheel', WheelRecognizer)\n  const buildWheelConfig = useRef<any>()\n  if (!buildWheelConfig.current) {\n    buildWheelConfig.current = memoize(_buildWheelConfig, isEqual)\n  }\n  return useRecognizers<UseWheelConfig>({ wheel: handler }, buildWheelConfig.current(config))\n}\n","import CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getGenericEventData, getPointerEventValues } from '../utils/event'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings } from '../Controller'\n\nexport class MoveRecognizer extends CoordinatesRecognizer<'move'> {\n  readonly ingKey = 'moving'\n  readonly stateKey = 'move'\n\n  debounced = true\n\n  onMove = (event: React.PointerEvent | PointerEvent): void => {\n    if (!this.enabled) return\n    this.setTimeout(this.onMoveEnd)\n\n    if (!this.state._active) this.onMoveStart(event)\n    else this.onMoveChange(event)\n  }\n\n  onMoveStart = (event: React.PointerEvent | PointerEvent): void => {\n    this.updateSharedState(getGenericEventData(event))\n    const values = getPointerEventValues(event)\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onMoveChange = (event: React.PointerEvent | PointerEvent): void => {\n    this.updateSharedState(getGenericEventData(event))\n    const values = getPointerEventValues(event)\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...this.getKinematics(values, event),\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onMoveEnd = (): void => {\n    const values = this.state.values\n    this.updateGestureState(this.getMovement(values))\n    this.updateGestureState({ velocities: [0, 0], velocity: 0, _active: false })\n    this.fireGestureHandler()\n  }\n\n  onPointerEnter = (event: React.PointerEvent | PointerEvent): void => {\n    this.controller.state.shared.hovering = true\n    if (!this.controller.config.enabled) return\n\n    if (this.controller.config.hover!.enabled) {\n      const values = getPointerEventValues(event)\n\n      const state = {\n        ...this.controller.state.shared,\n        ...this.state,\n        ...getGenericPayload(this, event, true),\n        values,\n        active: true,\n        hovering: true,\n      }\n\n      this.controller.handlers.hover!({ ...state, ...this.mapStateValues(state) })\n    }\n\n    if ('move' in this.controller.handlers) this.onMoveStart(event)\n  }\n\n  onPointerLeave = (event: React.PointerEvent | PointerEvent): void => {\n    this.controller.state.shared.hovering = false\n    if ('move' in this.controller.handlers) this.onMoveEnd()\n    if (!this.controller.config.hover!.enabled) return\n\n    const values = getPointerEventValues(event)\n\n    const state = {\n      ...this.controller.state.shared,\n      ...this.state,\n      ...getGenericPayload(this, event),\n      values,\n      active: false,\n    }\n\n    this.controller.handlers.hover!({ ...state, ...this.mapStateValues(state) })\n  }\n\n  addBindings(bindings: any): void {\n    if ('move' in this.controller.handlers) {\n      addBindings(bindings, 'onPointerMove', this.onMove)\n    }\n    if ('hover' in this.controller.handlers) {\n      addBindings(bindings, 'onPointerEnter', this.onPointerEnter)\n      addBindings(bindings, 'onPointerLeave', this.onPointerLeave)\n    }\n  }\n}\n","import { UseMoveConfig, Handler, EventTypes } from '../types'\nimport { _buildMoveConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { MoveRecognizer } from '../recognizers/MoveRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Move hook.\n *\n * @param handler - the function fired every time the move gesture updates\n * @param [config={}] - the config object including generic options and move options\n */\nexport function useMove<K = EventTypes['move']>(handler: Handler<'move', K>, config: UseMoveConfig | {} = {}) {\n  RecognizersMap.set('move', MoveRecognizer)\n  const buildMoveConfig = useRef<any>()\n  if (!buildMoveConfig.current) {\n    buildMoveConfig.current = memoize(_buildMoveConfig, isEqual)\n  }\n  return useRecognizers<UseMoveConfig>({ move: handler }, buildMoveConfig.current(config))\n}\n","import { Handler, UseHoverConfig, EventTypes } from '../types'\nimport { _buildHoverConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { MoveRecognizer } from '../recognizers/MoveRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Hover hook.\n *\n * @param handler - the function fired every time the hover gesture updates\n * @param [config={}] - the config object including generic options and hover options\n */\nexport function useHover<K = EventTypes['hover']>(handler: Handler<'hover', K>, config: UseHoverConfig | {} = {}) {\n  RecognizersMap.set('hover', MoveRecognizer)\n  const buildHoverConfig = useRef<any>()\n  if (!buildHoverConfig.current) {\n    buildHoverConfig.current = memoize(_buildHoverConfig, isEqual)\n  }\n  return useRecognizers<UseHoverConfig>({ hover: handler }, buildHoverConfig.current(config))\n}\n","import CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getGenericEventData, getScrollEventValues } from '../utils/event'\nimport { calculateAllGeometry } from '../utils/math'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings } from '../Controller'\n\nexport class ScrollRecognizer extends CoordinatesRecognizer<'scroll'> {\n  readonly ingKey = 'scrolling'\n  readonly stateKey = 'scroll'\n  debounced = true\n\n  handleEvent = (event: React.UIEvent | UIEvent): void => {\n    if (!this.enabled) return\n\n    this.clearTimeout()\n    this.setTimeout(this.onEnd)\n\n    const values = getScrollEventValues(event)\n    this.updateSharedState(getGenericEventData(event))\n\n    if (!this.state._active) {\n      this.updateGestureState({\n        ...getStartGestureState(this, values, event),\n        ...getGenericPayload(this, event, true),\n        initial: this.state.values,\n      })\n\n      const movementDetection = this.getMovement(values)\n      const geometry = calculateAllGeometry(movementDetection.delta!)\n\n      this.updateGestureState(movementDetection)\n      this.updateGestureState(geometry)\n    } else {\n      this.updateGestureState({\n        ...getGenericPayload(this, event),\n        ...this.getKinematics(values, event),\n      })\n    }\n\n    this.fireGestureHandler()\n  }\n\n  onEnd = (): void => {\n    this.state._active = false\n    this.updateGestureState({ ...this.getMovement(this.state.values), velocities: [0, 0], velocity: 0 })\n    this.fireGestureHandler()\n  }\n\n  addBindings(bindings: any): void {\n    addBindings(bindings, 'onScroll', this.handleEvent)\n  }\n}\n\n\n","import { UseScrollConfig, Handler, EventTypes } from '../types'\nimport { _buildScrollConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { ScrollRecognizer } from '../recognizers/ScrollRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { useRef } from 'react'\n\n/**\n * Scroll hook.\n *\n * @param handler - the function fired every time the scroll gesture updates\n * @param [config={}] - the config object including generic options and scroll options\n */\nexport function useScroll<K = EventTypes['scroll']>(handler: Handler<'scroll', K>, config: UseScrollConfig | {} = {}) {\n  RecognizersMap.set('scroll', ScrollRecognizer)\n  const buildScrollConfig = useRef<any>()\n  if (!buildScrollConfig.current) {\n    buildScrollConfig.current = memoize(_buildScrollConfig, isEqual)\n  }\n  return useRecognizers<UseScrollConfig>({ scroll: handler }, buildScrollConfig.current(config))\n}\n","import useRecognizers from './useRecognizers'\nimport { buildComplexConfig } from './buildConfig'\nimport {\n  InternalConfig,\n  InternalHandlers,\n  UserHandlers,\n  UseGestureConfig,\n  Handlers,\n  EventTypes,\n  AnyGestureEventTypes,\n} from '../types'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { DragRecognizer } from '../recognizers/DragRecognizer'\nimport { MoveRecognizer } from '../recognizers/MoveRecognizer'\nimport { PinchRecognizer } from '../recognizers/PinchRecognizer'\nimport { ScrollRecognizer } from '../recognizers/ScrollRecognizer'\nimport { WheelRecognizer } from '../recognizers/WheelRecognizer'\n\nexport function wrapStart(fn: Function) {\n  return function (this: any, { first }: any) {\n    if (first) fn.apply(this, arguments)\n  }\n}\n\nexport function wrapEnd(fn: Function) {\n  return function (this: any, { last }: any) {\n    if (last) fn.apply(this, arguments)\n  }\n}\n\nconst RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/\n\nfunction sortHandlers(handlers: object) {\n  const native: any = {}\n  const handle: any = {}\n  const actions = new Set()\n\n  for (let key in handlers) {\n    if (RE_NOT_NATIVE.test(key)) {\n      actions.add(RegExp.lastMatch)\n      handle[key] = (handlers as any)[key]\n    } else {\n      native[key] = (handlers as any)[key]\n    }\n  }\n\n  return [handle, native, actions]\n}\n\n/**\n * @public\n *\n * The most complete gesture hook, allowing support for multiple gestures.\n *\n * @param {Handlers} handlers - an object with on[Gesture] keys containg gesture handlers\n * @param {UseGestureConfig} [config={}] - the full config object\n * @returns {(...args: any[]) => HookReturnType<Config>}\n */\nexport function useGesture<T extends AnyGestureEventTypes = EventTypes>(\n  _handlers: Handlers<T>,\n  config: UseGestureConfig = {}\n) {\n  const [handlers, nativeHandlers, actions] = sortHandlers(_handlers)\n\n  RecognizersMap.set('drag', DragRecognizer)\n  RecognizersMap.set('hover', MoveRecognizer)\n  RecognizersMap.set('move', MoveRecognizer)\n  RecognizersMap.set('pinch', PinchRecognizer)\n  RecognizersMap.set('scroll', ScrollRecognizer)\n  RecognizersMap.set('wheel', WheelRecognizer)\n\n  const mergedConfig: InternalConfig = buildComplexConfig(config, actions)\n  const internalHandlers: Partial<InternalHandlers> = {}\n\n  if (actions.has('onDrag')) internalHandlers.drag = includeStartEndHandlers(handlers, 'onDrag')\n  if (actions.has('onWheel')) internalHandlers.wheel = includeStartEndHandlers(handlers, 'onWheel')\n  if (actions.has('onScroll')) internalHandlers.scroll = includeStartEndHandlers(handlers, 'onScroll')\n  if (actions.has('onMove')) internalHandlers.move = includeStartEndHandlers(handlers, 'onMove')\n  if (actions.has('onPinch')) internalHandlers.pinch = includeStartEndHandlers(handlers, 'onPinch')\n  if (actions.has('onHover')) internalHandlers.hover = handlers.onHover\n\n  return useRecognizers<UseGestureConfig>(internalHandlers, mergedConfig, nativeHandlers)\n}\n\n/**\n * @private\n *\n * This utility function will integrate start and end handlers into the regular\n * handler function by using first and last conditions.\n *\n * @param {UserHandlersPartial} handlers - the handlers function object\n * @param {HandlerKey} handlerKey - the key for which to integrate start and end handlers\n * @returns\n */\ntype HandlerKey = 'onDrag' | 'onPinch' | 'onWheel' | 'onMove' | 'onScroll' | 'onHover'\nfunction includeStartEndHandlers(handlers: Partial<UserHandlers>, handlerKey: HandlerKey) {\n  const startKey = (handlerKey + 'Start') as keyof UserHandlers\n  const endKey = (handlerKey + 'End') as keyof UserHandlers\n\n  const fn = (state: any) => {\n    let memo: any = undefined\n    if (state.first && startKey in handlers) handlers[startKey]!(state)\n    if (handlerKey in handlers) memo = handlers[handlerKey]!(state)\n    if (state.last && endKey in handlers) handlers[endKey]!(state)\n    return memo\n  }\n  return fn\n}\n"]},"metadata":{},"sourceType":"module"}