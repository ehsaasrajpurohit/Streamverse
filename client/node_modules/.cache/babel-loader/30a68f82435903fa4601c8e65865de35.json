{"ast":null,"code":"var _jsxFileName = \"/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/src/Components/Playlistpopup/FormInput.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport TextField from \"@material-ui/core/TextField\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, gray 30%, black 90%)',\n    border: 0,\n    color: 'white',\n    height: 30,\n    padding: '0 10px',\n    whiteSpace: 'nowrap',\n    margin: '15px 0 0 20px'\n  },\n  label: {\n    width: '80%'\n  }\n});\n\nconst NewPlaylistCreator = _ref => {\n  _s();\n\n  let {\n    theme,\n    newPlaylist,\n    setTodo,\n    clearInput,\n    inputRef,\n    isInputEmpty,\n    preventSubmit\n  } = _ref;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex w-full border-gray-100 border-b-1 py-5 mb-5 h-16\",\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.label,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Create new playlist\" // better accessibility with Material UI\n          ,\n          value: newPlaylist,\n          variant: \"outlined\",\n          onChange: e => setTodo(e.target.value),\n          onFocus: clearInput,\n          ref: inputRef,\n          \"aria-describedby\": \"component-error-text\",\n          onKeyPress: preventSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), !isInputEmpty ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n            id: \"component-error-text\",\n            children: \"Name can't be empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        alt: \"add-note\",\n        className: classes.root,\n        onKeyPress: preventSubmit,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPlaylistCreator, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = NewPlaylistCreator;\nexport default NewPlaylistCreator;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPlaylistCreator\");","map":{"version":3,"names":["React","Button","makeStyles","ThemeProvider","TextField","FormHelperText","FormControl","useStyles","root","background","border","color","height","padding","whiteSpace","margin","label","width","NewPlaylistCreator","theme","newPlaylist","setTodo","clearInput","inputRef","isInputEmpty","preventSubmit","classes","e","target","value"],"sources":["/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/src/Components/Playlistpopup/FormInput.js"],"sourcesContent":["import  React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport TextField from \"@material-ui/core/TextField\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst useStyles = makeStyles({\n    root: {\n        background: 'linear-gradient(45deg, gray 30%, black 90%)',\n        border: 0,\n        color: 'white',\n        height: 30,\n        padding: '0 10px',\n        whiteSpace: 'nowrap',\n        margin: '15px 0 0 20px',\n    },\n    label: {\n        width: '80%'\n    }\n});\n\nconst NewPlaylistCreator = ({ theme, newPlaylist, setTodo, clearInput, inputRef, isInputEmpty, preventSubmit }) => {\n    \n    const classes = useStyles();\n    return (\n        <div className=\"flex w-full border-gray-100 border-b-1 py-5 mb-5 h-16\">\n            <ThemeProvider theme={theme}>\n                <FormControl   className={classes.label}>\n                    <TextField\n                        id=\"outlined-basic\"\n                        label=\"Create new playlist\" // better accessibility with Material UI\n                        value={newPlaylist}\n                        variant=\"outlined\"\n                        onChange={(e) => setTodo(e.target.value)}\n                        onFocus={clearInput}\n                        ref={inputRef}\n                        aria-describedby=\"component-error-text\"\n                        onKeyPress={preventSubmit}\n                    />\n\n                    { !isInputEmpty ?\n                        <></>\n                        :\n                        <>\n                            <FormHelperText id=\"component-error-text\">Name can't be empty</FormHelperText>\n                        </>\n                    }\n                </FormControl>\n                <Button\n                    type=\"submit\"\n                    alt=\"add-note\"\n                    className={classes.root}\n                    onKeyPress={preventSubmit}\n                >\n                    Create\n                </Button>\n            </ThemeProvider>\n        </div>\n    )\n\n}\n\nexport  default NewPlaylistCreator;"],"mappings":";;;AAAA,OAAQA,KAAR,MAAmB,OAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,0BAA1C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAC;EACzBM,IAAI,EAAE;IACFC,UAAU,EAAE,6CADV;IAEFC,MAAM,EAAE,CAFN;IAGFC,KAAK,EAAE,OAHL;IAIFC,MAAM,EAAE,EAJN;IAKFC,OAAO,EAAE,QALP;IAMFC,UAAU,EAAE,QANV;IAOFC,MAAM,EAAE;EAPN,CADmB;EAUzBC,KAAK,EAAE;IACHC,KAAK,EAAE;EADJ;AAVkB,CAAD,CAA5B;;AAeA,MAAMC,kBAAkB,GAAG,QAAwF;EAAA;;EAAA,IAAvF;IAAEC,KAAF;IAASC,WAAT;IAAsBC,OAAtB;IAA+BC,UAA/B;IAA2CC,QAA3C;IAAqDC,YAArD;IAAmEC;EAAnE,CAAuF;EAE/G,MAAMC,OAAO,GAAGnB,SAAS,EAAzB;EACA,oBACI;IAAK,SAAS,EAAC,uDAAf;IAAA,uBACI,QAAC,aAAD;MAAe,KAAK,EAAEY,KAAtB;MAAA,wBACI,QAAC,WAAD;QAAe,SAAS,EAAEO,OAAO,CAACV,KAAlC;QAAA,wBACI,QAAC,SAAD;UACI,EAAE,EAAC,gBADP;UAEI,KAAK,EAAC,qBAFV,CAEgC;UAFhC;UAGI,KAAK,EAAEI,WAHX;UAII,OAAO,EAAC,UAJZ;UAKI,QAAQ,EAAGO,CAAD,IAAON,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAL5B;UAMI,OAAO,EAAEP,UANb;UAOI,GAAG,EAAEC,QAPT;UAQI,oBAAiB,sBARrB;UASI,UAAU,EAAEE;QAThB;UAAA;UAAA;UAAA;QAAA,QADJ,EAaM,CAACD,YAAD,gBACE,qCADF,gBAGE;UAAA,uBACI,QAAC,cAAD;YAAgB,EAAE,EAAC,sBAAnB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ,iBAhBR;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAsBI,QAAC,MAAD;QACI,IAAI,EAAC,QADT;QAEI,GAAG,EAAC,UAFR;QAGI,SAAS,EAAEE,OAAO,CAAClB,IAHvB;QAII,UAAU,EAAEiB,aAJhB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAtBJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAoCH,CAvCD;;GAAMP,kB;UAEcX,S;;;KAFdW,kB;AAyCN,eAAgBA,kBAAhB"},"metadata":{},"sourceType":"module"}