{"ast":null,"code":"var _jsxFileName = \"/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/src/Components/Playlistpopup/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport { Checkbox } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    // backgroundColor: '#f5f5f5',\n    padding: 0\n  },\n  li: {\n    borderBottom: '1px dashed black'\n  }\n}));\n\nconst TodoList = _ref => {\n  _s();\n\n  let {\n    theme,\n    playlists,\n    completeTodo,\n    editTodo,\n    deleteTodo,\n    saveTodo,\n    noteRef,\n    preventSubmit,\n    videoId,\n    handleToggle,\n    checked\n  } = _ref;\n  const classes = useStyles();\n  let UniqKey = 123; // const handleToggle = (value, inx) => () => {\n  //     const currentIndex = checked.indexOf(value);\n  //     const newChecked = [...checked];\n  //     if (currentIndex === -1) {\n  //         newChecked.push(value);\n  //     } else {\n  //         newChecked.splice(currentIndex, 1);\n  //     }\n  //     setChecked(newChecked);\n  //     completeTodo(inx);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(List, {\n      className: classes.root,\n      children: Array.isArray(playlists) && playlists.map((playlist, inx) => {\n        const labelId = `list-play-${playlist}`;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          role: undefined,\n          dense: true,\n          button: true,\n          className: classes.li,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              color: \"primary\",\n              edge: \"start\",\n              checked: playlist.isFilePresent,\n              tabIndex: -1,\n              disableRipple: true,\n              inputProps: {\n                'aria-labelledby': labelId\n              },\n              onClick: handleToggle(playlist, inx),\n              onKeyPress: preventSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), !playlist.isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              id: labelId,\n              primary: `${playlist.name}`,\n              style: {\n                textDecoration: playlist.isCompleted ? \"\" : \"\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"edit\",\n                onClick: () => editTodo(inx),\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"task\" // better accessibility with HTML\n              ,\n              className: \"visuallyhidden\",\n              children: playlist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form__edit-input\",\n              defaultValue: playlist.name,\n              ref: element => noteRef.current[inx] = element,\n              onKeyPress: preventSubmit,\n              id: \"task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => saveTodo(inx),\n                edge: \"end\",\n                \"aria-label\": \"delete\",\n                children: /*#__PURE__*/_jsxDEV(BookmarkIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => deleteTodo(inx),\n              edge: \"end\",\n              \"aria-label\": \"delete\",\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, `playlist-${UniqKey++}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useEffect","makeStyles","ThemeProvider","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","IconButton","EditIcon","DeleteIcon","BookmarkIcon","Checkbox","useStyles","root","width","padding","li","borderBottom","TodoList","theme","playlists","completeTodo","editTodo","deleteTodo","saveTodo","noteRef","preventSubmit","videoId","handleToggle","checked","classes","UniqKey","Array","isArray","map","playlist","inx","labelId","undefined","isFilePresent","isEditing","name","textDecoration","isCompleted","element","current"],"sources":["/Users/ehsaasrajpurohit/Desktop/Streamverse-Avishkar-main/client/src/Components/Playlistpopup/List.js"],"sourcesContent":["import React,{useEffect} from 'react';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport { Checkbox } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        width: '100%',\n        // backgroundColor: '#f5f5f5',\n        padding: 0\n    },\n    li: {\n        borderBottom: '1px dashed black'\n    }\n}));\n\nconst TodoList = ({ theme, playlists, completeTodo, editTodo, deleteTodo, saveTodo, noteRef, preventSubmit, videoId, handleToggle, checked }) => {\n\n    const classes = useStyles();\n    let UniqKey = 123;\n\n\n\n    // const handleToggle = (value, inx) => () => {\n    //     const currentIndex = checked.indexOf(value);\n    //     const newChecked = [...checked];\n\n    //     if (currentIndex === -1) {\n    //         newChecked.push(value);\n    //     } else {\n    //         newChecked.splice(currentIndex, 1);\n    //     }\n\n    //     setChecked(newChecked);\n    //     completeTodo(inx);\n    // };\n\n\n    return (\n        <ThemeProvider theme={theme}>\n            <List className={classes.root}>\n            { Array.isArray(playlists) && playlists.map((playlist, inx) => {\n                const labelId = `list-play-${playlist}`;\n                return (\n                    <ListItem\n                        key={`playlist-${UniqKey++}`}\n                        role={undefined}\n                        dense\n                        button\n                        className={classes.li}\n                    >\n                        <ListItemIcon>\n                            <Checkbox\n                                color=\"primary\"\n                                edge=\"start\"\n                                checked={playlist.isFilePresent}\n                                tabIndex={-1}\n                                disableRipple\n                                inputProps={{ 'aria-labelledby': labelId }}\n                                onClick={handleToggle(playlist, inx)}\n                                onKeyPress={preventSubmit}\n                            />\n                        </ListItemIcon>\n                        {\n                            (!playlist.isEditing) ?\n                                <>\n                                    <ListItemText\n                                        id={labelId}\n                                        primary={`${playlist.name}`}\n                                        style={{textDecoration: playlist.isCompleted ? \"\" : \"\"}}\n                                    />\n                                    <ListItemIcon>\n                                        <IconButton\n                                            edge=\"end\"\n                                            aria-label=\"edit\"\n                                            onClick={() => editTodo(inx)}\n                                        >\n                                            <EditIcon/>\n                                        </IconButton>\n                                    </ListItemIcon>\n                                </>\n                                :\n                                <>\n                                    <label\n                                        htmlFor=\"task\" // better accessibility with HTML\n                                        className=\"visuallyhidden\"\n                                    >\n                                        {playlist.name}\n                                    </label>\n                                    <input\n                                        className=\"form__edit-input\"\n                                        defaultValue={playlist.name}\n                                        ref={(element) => noteRef.current[inx] = element}\n                                        onKeyPress={preventSubmit}\n                                        id=\"task\"\n                                    />\n                                    <ListItemIcon>\n                                        <IconButton onClick={() => saveTodo(inx)} edge=\"end\" aria-label=\"delete\">\n                                            <BookmarkIcon />\n                                        </IconButton>\n                                    </ListItemIcon>\n                                </>\n                        }\n                        <ListItemSecondaryAction>\n                            <IconButton onClick={() => deleteTodo(inx)} edge=\"end\" aria-label=\"delete\">\n                                <DeleteIcon />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n        </ThemeProvider>\n    );\n}\n\nexport default TodoList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}